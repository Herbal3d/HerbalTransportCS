// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SpaceServer.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace org.herbal3d.basil.protocol.SpaceServer {

  /// <summary>Holder for reflection information generated from SpaceServer.proto</summary>
  public static partial class SpaceServerReflection {

    #region Descriptor
    /// <summary>File descriptor for SpaceServer.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SpaceServerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFTcGFjZVNlcnZlci5wcm90bxILU3BhY2VTZXJ2ZXIaEEJhc2lsVHlwZXMu",
            "cHJvdG8iPQoNQ2FtZXJhVmlld1JlcRIsCgRhdXRoGAEgASgLMh4uQmFzaWxU",
            "eXBlLkFjY2Vzc0F1dGhvcml6YXRpb24iPgoOQ2FtZXJhVmlld1Jlc3ASLAoJ",
            "ZXhjZXB0aW9uGAEgASgLMhkuQmFzaWxUeXBlLkJhc2lsRXhjZXB0aW9uIqwB",
            "Cg5PcGVuU2Vzc2lvblJlcRIsCgRhdXRoGAEgASgLMh4uQmFzaWxUeXBlLkFj",
            "Y2Vzc0F1dGhvcml6YXRpb24SOwoIZmVhdHVyZXMYAiADKAsyKS5TcGFjZVNl",
            "cnZlci5PcGVuU2Vzc2lvblJlcS5GZWF0dXJlc0VudHJ5Gi8KDUZlYXR1cmVz",
            "RW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASK0AQoPT3Bl",
            "blNlc3Npb25SZXNwEiwKCWV4Y2VwdGlvbhgBIAEoCzIZLkJhc2lsVHlwZS5C",
            "YXNpbEV4Y2VwdGlvbhJACgpwcm9wZXJ0aWVzGAIgAygLMiwuU3BhY2VTZXJ2",
            "ZXIuT3BlblNlc3Npb25SZXNwLlByb3BlcnRpZXNFbnRyeRoxCg9Qcm9wZXJ0",
            "aWVzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASJPCg9D",
            "bG9zZVNlc3Npb25SZXESLAoEYXV0aBgBIAEoCzIeLkJhc2lsVHlwZS5BY2Nl",
            "c3NBdXRob3JpemF0aW9uEg4KBnJlYXNvbhgCIAEoCSJAChBDbG9zZVNlc3Np",
            "b25SZXNwEiwKCWV4Y2VwdGlvbhgBIAEoCzIZLkJhc2lsVHlwZS5CYXNpbEV4",
            "Y2VwdGlvbjKkAQoLU3BhY2VTZXJ2ZXISSAoLT3BlblNlc3Npb24SGy5TcGFj",
            "ZVNlcnZlci5PcGVuU2Vzc2lvblJlcRocLlNwYWNlU2VydmVyLk9wZW5TZXNz",
            "aW9uUmVzcBJLCgxDbG9zZVNlc3Npb24SHC5TcGFjZVNlcnZlci5DbG9zZVNl",
            "c3Npb25SZXEaHS5TcGFjZVNlcnZlci5DbG9zZVNlc3Npb25SZXNwQiqqAidv",
            "cmcuaGVyYmFsM2QuYmFzaWwucHJvdG9jb2wuU3BhY2VTZXJ2ZXJiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::org.herbal3d.basil.protocol.BasilType.BasilTypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.SpaceServer.CameraViewReq), global::org.herbal3d.basil.protocol.SpaceServer.CameraViewReq.Parser, new[]{ "Auth" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.SpaceServer.CameraViewResp), global::org.herbal3d.basil.protocol.SpaceServer.CameraViewResp.Parser, new[]{ "Exception" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.SpaceServer.OpenSessionReq), global::org.herbal3d.basil.protocol.SpaceServer.OpenSessionReq.Parser, new[]{ "Auth", "Features" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.SpaceServer.OpenSessionResp), global::org.herbal3d.basil.protocol.SpaceServer.OpenSessionResp.Parser, new[]{ "Exception", "Properties" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.SpaceServer.CloseSessionReq), global::org.herbal3d.basil.protocol.SpaceServer.CloseSessionReq.Parser, new[]{ "Auth", "Reason" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.SpaceServer.CloseSessionResp), global::org.herbal3d.basil.protocol.SpaceServer.CloseSessionResp.Parser, new[]{ "Exception" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// VIEW MANAGEMENT =============================================
  /// The viewer is telling the space server where the camera is pointing
  /// </summary>
  public sealed partial class CameraViewReq : pb::IMessage<CameraViewReq> {
    private static readonly pb::MessageParser<CameraViewReq> _parser = new pb::MessageParser<CameraViewReq>(() => new CameraViewReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CameraViewReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.SpaceServer.SpaceServerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CameraViewReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CameraViewReq(CameraViewReq other) : this() {
      auth_ = other.auth_ != null ? other.auth_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CameraViewReq Clone() {
      return new CameraViewReq(this);
    }

    /// <summary>Field number for the "auth" field.</summary>
    public const int AuthFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization auth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization Auth {
      get { return auth_; }
      set {
        auth_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CameraViewReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CameraViewReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Auth, other.Auth)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (auth_ != null) hash ^= Auth.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (auth_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Auth);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (auth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auth);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CameraViewReq other) {
      if (other == null) {
        return;
      }
      if (other.auth_ != null) {
        if (auth_ == null) {
          Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
        }
        Auth.MergeFrom(other.Auth);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (auth_ == null) {
              Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
            }
            input.ReadMessage(Auth);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CameraViewResp : pb::IMessage<CameraViewResp> {
    private static readonly pb::MessageParser<CameraViewResp> _parser = new pb::MessageParser<CameraViewResp>(() => new CameraViewResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CameraViewResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.SpaceServer.SpaceServerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CameraViewResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CameraViewResp(CameraViewResp other) : this() {
      exception_ = other.exception_ != null ? other.exception_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CameraViewResp Clone() {
      return new CameraViewResp(this);
    }

    /// <summary>Field number for the "exception" field.</summary>
    public const int ExceptionFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.BasilException exception_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.BasilException Exception {
      get { return exception_; }
      set {
        exception_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CameraViewResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CameraViewResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Exception, other.Exception)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (exception_ != null) hash ^= Exception.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (exception_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Exception);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (exception_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Exception);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CameraViewResp other) {
      if (other == null) {
        return;
      }
      if (other.exception_ != null) {
        if (exception_ == null) {
          Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
        }
        Exception.MergeFrom(other.Exception);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (exception_ == null) {
              Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
            }
            input.ReadMessage(Exception);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A client initiates a connection.
  /// Returned property list is a collection of Basil renderer capabilities.
  /// </summary>
  public sealed partial class OpenSessionReq : pb::IMessage<OpenSessionReq> {
    private static readonly pb::MessageParser<OpenSessionReq> _parser = new pb::MessageParser<OpenSessionReq>(() => new OpenSessionReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OpenSessionReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.SpaceServer.SpaceServerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenSessionReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenSessionReq(OpenSessionReq other) : this() {
      auth_ = other.auth_ != null ? other.auth_.Clone() : null;
      features_ = other.features_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenSessionReq Clone() {
      return new OpenSessionReq(this);
    }

    /// <summary>Field number for the "auth" field.</summary>
    public const int AuthFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization auth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization Auth {
      get { return auth_; }
      set {
        auth_ = value;
      }
    }

    /// <summary>Field number for the "features" field.</summary>
    public const int FeaturesFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_features_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 18);
    private readonly pbc::MapField<string, string> features_ = new pbc::MapField<string, string>();
    /// <summary>
    /// features requested
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Features {
      get { return features_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OpenSessionReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OpenSessionReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Auth, other.Auth)) return false;
      if (!Features.Equals(other.Features)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (auth_ != null) hash ^= Auth.GetHashCode();
      hash ^= Features.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (auth_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Auth);
      }
      features_.WriteTo(output, _map_features_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (auth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auth);
      }
      size += features_.CalculateSize(_map_features_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OpenSessionReq other) {
      if (other == null) {
        return;
      }
      if (other.auth_ != null) {
        if (auth_ == null) {
          Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
        }
        Auth.MergeFrom(other.Auth);
      }
      features_.Add(other.features_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (auth_ == null) {
              Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
            }
            input.ReadMessage(Auth);
            break;
          }
          case 18: {
            features_.AddEntriesFrom(input, _map_features_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OpenSessionResp : pb::IMessage<OpenSessionResp> {
    private static readonly pb::MessageParser<OpenSessionResp> _parser = new pb::MessageParser<OpenSessionResp>(() => new OpenSessionResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OpenSessionResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.SpaceServer.SpaceServerReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenSessionResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenSessionResp(OpenSessionResp other) : this() {
      exception_ = other.exception_ != null ? other.exception_.Clone() : null;
      properties_ = other.properties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenSessionResp Clone() {
      return new OpenSessionResp(this);
    }

    /// <summary>Field number for the "exception" field.</summary>
    public const int ExceptionFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.BasilException exception_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.BasilException Exception {
      get { return exception_; }
      set {
        exception_ = value;
      }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_properties_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 18);
    private readonly pbc::MapField<string, string> properties_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Properties {
      get { return properties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OpenSessionResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OpenSessionResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Exception, other.Exception)) return false;
      if (!Properties.Equals(other.Properties)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (exception_ != null) hash ^= Exception.GetHashCode();
      hash ^= Properties.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (exception_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Exception);
      }
      properties_.WriteTo(output, _map_properties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (exception_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Exception);
      }
      size += properties_.CalculateSize(_map_properties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OpenSessionResp other) {
      if (other == null) {
        return;
      }
      if (other.exception_ != null) {
        if (exception_ == null) {
          Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
        }
        Exception.MergeFrom(other.Exception);
      }
      properties_.Add(other.properties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (exception_ == null) {
              Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
            }
            input.ReadMessage(Exception);
            break;
          }
          case 18: {
            properties_.AddEntriesFrom(input, _map_properties_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CloseSessionReq : pb::IMessage<CloseSessionReq> {
    private static readonly pb::MessageParser<CloseSessionReq> _parser = new pb::MessageParser<CloseSessionReq>(() => new CloseSessionReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CloseSessionReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.SpaceServer.SpaceServerReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseSessionReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseSessionReq(CloseSessionReq other) : this() {
      auth_ = other.auth_ != null ? other.auth_.Clone() : null;
      reason_ = other.reason_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseSessionReq Clone() {
      return new CloseSessionReq(this);
    }

    /// <summary>Field number for the "auth" field.</summary>
    public const int AuthFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization auth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization Auth {
      get { return auth_; }
      set {
        auth_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 2;
    private string reason_ = "";
    /// <summary>
    /// if there is a reason for leaving
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CloseSessionReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CloseSessionReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Auth, other.Auth)) return false;
      if (Reason != other.Reason) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (auth_ != null) hash ^= Auth.GetHashCode();
      if (Reason.Length != 0) hash ^= Reason.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (auth_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Auth);
      }
      if (Reason.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Reason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (auth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auth);
      }
      if (Reason.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CloseSessionReq other) {
      if (other == null) {
        return;
      }
      if (other.auth_ != null) {
        if (auth_ == null) {
          Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
        }
        Auth.MergeFrom(other.Auth);
      }
      if (other.Reason.Length != 0) {
        Reason = other.Reason;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (auth_ == null) {
              Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
            }
            input.ReadMessage(Auth);
            break;
          }
          case 18: {
            Reason = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CloseSessionResp : pb::IMessage<CloseSessionResp> {
    private static readonly pb::MessageParser<CloseSessionResp> _parser = new pb::MessageParser<CloseSessionResp>(() => new CloseSessionResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CloseSessionResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.SpaceServer.SpaceServerReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseSessionResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseSessionResp(CloseSessionResp other) : this() {
      exception_ = other.exception_ != null ? other.exception_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseSessionResp Clone() {
      return new CloseSessionResp(this);
    }

    /// <summary>Field number for the "exception" field.</summary>
    public const int ExceptionFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.BasilException exception_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.BasilException Exception {
      get { return exception_; }
      set {
        exception_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CloseSessionResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CloseSessionResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Exception, other.Exception)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (exception_ != null) hash ^= Exception.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (exception_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Exception);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (exception_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Exception);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CloseSessionResp other) {
      if (other == null) {
        return;
      }
      if (other.exception_ != null) {
        if (exception_ == null) {
          Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
        }
        Exception.MergeFrom(other.Exception);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (exception_ == null) {
              Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
            }
            input.ReadMessage(Exception);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
