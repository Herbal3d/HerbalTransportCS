// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: BrothServer.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace org.herbal3d.basil.protocol.BrothServer {

  /// <summary>Holder for reflection information generated from BrothServer.proto</summary>
  public static partial class BrothServerReflection {

    #region Descriptor
    /// <summary>File descriptor for BrothServer.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BrothServerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFCcm90aFNlcnZlci5wcm90bxILQnJvdGhTZXJ2ZXIaEEJhc2lsVHlwZXMu",
            "cHJvdG8ixQEKEFJlZ2lzdGVyVG9waWNSZXESLAoEYXV0aBgBIAEoCzIeLkJh",
            "c2lsVHlwZS5BY2Nlc3NBdXRob3JpemF0aW9uEg0KBXRvcGljGAIgASgJEkEK",
            "CnByb3BlcnRpZXMYAyADKAsyLS5Ccm90aFNlcnZlci5SZWdpc3RlclRvcGlj",
            "UmVxLlByb3BlcnRpZXNFbnRyeRoxCg9Qcm9wZXJ0aWVzRW50cnkSCwoDa2V5",
            "GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASJBChFSZWdpc3RlclRvcGljUmVz",
            "cBIsCglleGNlcHRpb24YASABKAsyGS5CYXNpbFR5cGUuQmFzaWxFeGNlcHRp",
            "b24iUQoSRGVyZWdpc3RlclRvcGljUmVxEiwKBGF1dGgYASABKAsyHi5CYXNp",
            "bFR5cGUuQWNjZXNzQXV0aG9yaXphdGlvbhINCgV0b3BpYxgCIAEoCSJDChNE",
            "ZXJlZ2lzdGVyVG9waWNSZXNwEiwKCWV4Y2VwdGlvbhgBIAEoCzIZLkJhc2ls",
            "VHlwZS5CYXNpbEV4Y2VwdGlvbiK9AQoMU3Vic2NyaWJlUmVxEiwKBGF1dGgY",
            "ASABKAsyHi5CYXNpbFR5cGUuQWNjZXNzQXV0aG9yaXphdGlvbhINCgV0b3Bp",
            "YxgCIAEoCRI9Cgpwcm9wZXJ0aWVzGAMgAygLMikuQnJvdGhTZXJ2ZXIuU3Vi",
            "c2NyaWJlUmVxLlByb3BlcnRpZXNFbnRyeRoxCg9Qcm9wZXJ0aWVzRW50cnkS",
            "CwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASI9Cg1TdWJzY3JpYmVS",
            "ZXNwEiwKCWV4Y2VwdGlvbhgBIAEoCzIZLkJhc2lsVHlwZS5CYXNpbEV4Y2Vw",
            "dGlvbiJNCg5VbnN1YnNjcmliZVJlcRIsCgRhdXRoGAEgASgLMh4uQmFzaWxU",
            "eXBlLkFjY2Vzc0F1dGhvcml6YXRpb24SDQoFdG9waWMYAiABKAkiPwoPVW5z",
            "dWJzY3JpYmVSZXNwEiwKCWV4Y2VwdGlvbhgBIAEoCzIZLkJhc2lsVHlwZS5C",
            "YXNpbEV4Y2VwdGlvbiLNAQoUU3Vic2NyaXB0aW9uTWFkZVJlc3ASLAoJZXhj",
            "ZXB0aW9uGAEgASgLMhkuQmFzaWxUeXBlLkJhc2lsRXhjZXB0aW9uEg0KBXRv",
            "cGljGAIgASgJEkUKCnByb3BlcnRpZXMYAyADKAsyMS5Ccm90aFNlcnZlci5T",
            "dWJzY3JpcHRpb25NYWRlUmVzcC5Qcm9wZXJ0aWVzRW50cnkaMQoPUHJvcGVy",
            "dGllc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEizwEK",
            "FVN1YnNjcmlwdGlvbkNsZWFyUmVzcBIsCglleGNlcHRpb24YASABKAsyGS5C",
            "YXNpbFR5cGUuQmFzaWxFeGNlcHRpb24SDQoFdG9waWMYAiABKAkSRgoKcHJv",
            "cGVydGllcxgDIAMoCzIyLkJyb3RoU2VydmVyLlN1YnNjcmlwdGlvbkNsZWFy",
            "UmVzcC5Qcm9wZXJ0aWVzRW50cnkaMQoPUHJvcGVydGllc0VudHJ5EgsKA2tl",
            "eRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEitwEKDFNlbmRFdmVudFJlcRIs",
            "CgRhdXRoGAEgASgLMh4uQmFzaWxUeXBlLkFjY2Vzc0F1dGhvcml6YXRpb24S",
            "DQoFdG9waWMYAiABKAkSOQoIZmVhdHVyZXMYAyADKAsyJy5Ccm90aFNlcnZl",
            "ci5TZW5kRXZlbnRSZXEuRmVhdHVyZXNFbnRyeRovCg1GZWF0dXJlc0VudHJ5",
            "EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiHgoNU2VuZEV2ZW50",
            "UmVzcBINCgV0b3BpYxgCIAEoCSKaAgoJRXZlbnRSZXNwEiwKCWV4Y2VwdGlv",
            "bhgBIAEoCzIZLkJhc2lsVHlwZS5CYXNpbEV4Y2VwdGlvbhINCgV0b3BpYxgC",
            "IAEoCRIyCgZmaWx0ZXIYAyADKAsyIi5Ccm90aFNlcnZlci5FdmVudFJlc3Au",
            "RmlsdGVyRW50cnkSOgoKcHJvcGVydGllcxgEIAMoCzImLkJyb3RoU2VydmVy",
            "LkV2ZW50UmVzcC5Qcm9wZXJ0aWVzRW50cnkaLQoLRmlsdGVyRW50cnkSCwoD",
            "a2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ARoxCg9Qcm9wZXJ0aWVzRW50",
            "cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ATKFAwoLQnJvdGhT",
            "ZXJ2ZXISTgoNUmVnaXN0ZXJUb3BpYxIdLkJyb3RoU2VydmVyLlJlZ2lzdGVy",
            "VG9waWNSZXEaHi5Ccm90aFNlcnZlci5SZWdpc3RlclRvcGljUmVzcBJUCg9E",
            "ZXJlZ2lzdGVyVG9waWMSHy5Ccm90aFNlcnZlci5EZXJlZ2lzdGVyVG9waWNS",
            "ZXEaIC5Ccm90aFNlcnZlci5EZXJlZ2lzdGVyVG9waWNSZXNwEkIKCVN1YnNj",
            "cmliZRIZLkJyb3RoU2VydmVyLlN1YnNjcmliZVJlcRoaLkJyb3RoU2VydmVy",
            "LlN1YnNjcmliZVJlc3ASSAoLVW5zdWJzY3JpYmUSGy5Ccm90aFNlcnZlci5V",
            "bnN1YnNjcmliZVJlcRocLkJyb3RoU2VydmVyLlVuc3Vic2NyaWJlUmVzcBJC",
            "CglTZW5kRXZlbnQSGS5Ccm90aFNlcnZlci5TZW5kRXZlbnRSZXEaGi5Ccm90",
            "aFNlcnZlci5TZW5kRXZlbnRSZXNwQiqqAidvcmcuaGVyYmFsM2QuYmFzaWwu",
            "cHJvdG9jb2wuQnJvdGhTZXJ2ZXJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::org.herbal3d.basil.protocol.BasilType.BasilTypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BrothServer.RegisterTopicReq), global::org.herbal3d.basil.protocol.BrothServer.RegisterTopicReq.Parser, new[]{ "Auth", "Topic", "Properties" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BrothServer.RegisterTopicResp), global::org.herbal3d.basil.protocol.BrothServer.RegisterTopicResp.Parser, new[]{ "Exception" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BrothServer.DeregisterTopicReq), global::org.herbal3d.basil.protocol.BrothServer.DeregisterTopicReq.Parser, new[]{ "Auth", "Topic" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BrothServer.DeregisterTopicResp), global::org.herbal3d.basil.protocol.BrothServer.DeregisterTopicResp.Parser, new[]{ "Exception" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BrothServer.SubscribeReq), global::org.herbal3d.basil.protocol.BrothServer.SubscribeReq.Parser, new[]{ "Auth", "Topic", "Properties" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BrothServer.SubscribeResp), global::org.herbal3d.basil.protocol.BrothServer.SubscribeResp.Parser, new[]{ "Exception" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BrothServer.UnsubscribeReq), global::org.herbal3d.basil.protocol.BrothServer.UnsubscribeReq.Parser, new[]{ "Auth", "Topic" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BrothServer.UnsubscribeResp), global::org.herbal3d.basil.protocol.BrothServer.UnsubscribeResp.Parser, new[]{ "Exception" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BrothServer.SubscriptionMadeResp), global::org.herbal3d.basil.protocol.BrothServer.SubscriptionMadeResp.Parser, new[]{ "Exception", "Topic", "Properties" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BrothServer.SubscriptionClearResp), global::org.herbal3d.basil.protocol.BrothServer.SubscriptionClearResp.Parser, new[]{ "Exception", "Topic", "Properties" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BrothServer.SendEventReq), global::org.herbal3d.basil.protocol.BrothServer.SendEventReq.Parser, new[]{ "Auth", "Topic", "Features" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BrothServer.SendEventResp), global::org.herbal3d.basil.protocol.BrothServer.SendEventResp.Parser, new[]{ "Topic" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BrothServer.EventResp), global::org.herbal3d.basil.protocol.BrothServer.EventResp.Parser, new[]{ "Exception", "Topic", "Filter", "Properties" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// TOPIC MANAGEMENT ============================================
  /// </summary>
  public sealed partial class RegisterTopicReq : pb::IMessage<RegisterTopicReq> {
    private static readonly pb::MessageParser<RegisterTopicReq> _parser = new pb::MessageParser<RegisterTopicReq>(() => new RegisterTopicReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisterTopicReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BrothServer.BrothServerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterTopicReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterTopicReq(RegisterTopicReq other) : this() {
      auth_ = other.auth_ != null ? other.auth_.Clone() : null;
      topic_ = other.topic_;
      properties_ = other.properties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterTopicReq Clone() {
      return new RegisterTopicReq(this);
    }

    /// <summary>Field number for the "auth" field.</summary>
    public const int AuthFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization auth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization Auth {
      get { return auth_; }
      set {
        auth_ = value;
      }
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 2;
    private string topic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Topic {
      get { return topic_; }
      set {
        topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_properties_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 26);
    private readonly pbc::MapField<string, string> properties_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Properties {
      get { return properties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisterTopicReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisterTopicReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Auth, other.Auth)) return false;
      if (Topic != other.Topic) return false;
      if (!Properties.Equals(other.Properties)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (auth_ != null) hash ^= Auth.GetHashCode();
      if (Topic.Length != 0) hash ^= Topic.GetHashCode();
      hash ^= Properties.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (auth_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Auth);
      }
      if (Topic.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Topic);
      }
      properties_.WriteTo(output, _map_properties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (auth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auth);
      }
      if (Topic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
      }
      size += properties_.CalculateSize(_map_properties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisterTopicReq other) {
      if (other == null) {
        return;
      }
      if (other.auth_ != null) {
        if (auth_ == null) {
          Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
        }
        Auth.MergeFrom(other.Auth);
      }
      if (other.Topic.Length != 0) {
        Topic = other.Topic;
      }
      properties_.Add(other.properties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (auth_ == null) {
              Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
            }
            input.ReadMessage(Auth);
            break;
          }
          case 18: {
            Topic = input.ReadString();
            break;
          }
          case 26: {
            properties_.AddEntriesFrom(input, _map_properties_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RegisterTopicResp : pb::IMessage<RegisterTopicResp> {
    private static readonly pb::MessageParser<RegisterTopicResp> _parser = new pb::MessageParser<RegisterTopicResp>(() => new RegisterTopicResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisterTopicResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BrothServer.BrothServerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterTopicResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterTopicResp(RegisterTopicResp other) : this() {
      exception_ = other.exception_ != null ? other.exception_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterTopicResp Clone() {
      return new RegisterTopicResp(this);
    }

    /// <summary>Field number for the "exception" field.</summary>
    public const int ExceptionFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.BasilException exception_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.BasilException Exception {
      get { return exception_; }
      set {
        exception_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisterTopicResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisterTopicResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Exception, other.Exception)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (exception_ != null) hash ^= Exception.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (exception_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Exception);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (exception_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Exception);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisterTopicResp other) {
      if (other == null) {
        return;
      }
      if (other.exception_ != null) {
        if (exception_ == null) {
          Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
        }
        Exception.MergeFrom(other.Exception);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (exception_ == null) {
              Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
            }
            input.ReadMessage(Exception);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeregisterTopicReq : pb::IMessage<DeregisterTopicReq> {
    private static readonly pb::MessageParser<DeregisterTopicReq> _parser = new pb::MessageParser<DeregisterTopicReq>(() => new DeregisterTopicReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeregisterTopicReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BrothServer.BrothServerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeregisterTopicReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeregisterTopicReq(DeregisterTopicReq other) : this() {
      auth_ = other.auth_ != null ? other.auth_.Clone() : null;
      topic_ = other.topic_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeregisterTopicReq Clone() {
      return new DeregisterTopicReq(this);
    }

    /// <summary>Field number for the "auth" field.</summary>
    public const int AuthFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization auth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization Auth {
      get { return auth_; }
      set {
        auth_ = value;
      }
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 2;
    private string topic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Topic {
      get { return topic_; }
      set {
        topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeregisterTopicReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeregisterTopicReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Auth, other.Auth)) return false;
      if (Topic != other.Topic) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (auth_ != null) hash ^= Auth.GetHashCode();
      if (Topic.Length != 0) hash ^= Topic.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (auth_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Auth);
      }
      if (Topic.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Topic);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (auth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auth);
      }
      if (Topic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeregisterTopicReq other) {
      if (other == null) {
        return;
      }
      if (other.auth_ != null) {
        if (auth_ == null) {
          Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
        }
        Auth.MergeFrom(other.Auth);
      }
      if (other.Topic.Length != 0) {
        Topic = other.Topic;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (auth_ == null) {
              Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
            }
            input.ReadMessage(Auth);
            break;
          }
          case 18: {
            Topic = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeregisterTopicResp : pb::IMessage<DeregisterTopicResp> {
    private static readonly pb::MessageParser<DeregisterTopicResp> _parser = new pb::MessageParser<DeregisterTopicResp>(() => new DeregisterTopicResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeregisterTopicResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BrothServer.BrothServerReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeregisterTopicResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeregisterTopicResp(DeregisterTopicResp other) : this() {
      exception_ = other.exception_ != null ? other.exception_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeregisterTopicResp Clone() {
      return new DeregisterTopicResp(this);
    }

    /// <summary>Field number for the "exception" field.</summary>
    public const int ExceptionFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.BasilException exception_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.BasilException Exception {
      get { return exception_; }
      set {
        exception_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeregisterTopicResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeregisterTopicResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Exception, other.Exception)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (exception_ != null) hash ^= Exception.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (exception_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Exception);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (exception_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Exception);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeregisterTopicResp other) {
      if (other == null) {
        return;
      }
      if (other.exception_ != null) {
        if (exception_ == null) {
          Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
        }
        Exception.MergeFrom(other.Exception);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (exception_ == null) {
              Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
            }
            input.ReadMessage(Exception);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// SUBSCRIPTION MANAGEMENT =======================================
  /// </summary>
  public sealed partial class SubscribeReq : pb::IMessage<SubscribeReq> {
    private static readonly pb::MessageParser<SubscribeReq> _parser = new pb::MessageParser<SubscribeReq>(() => new SubscribeReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscribeReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BrothServer.BrothServerReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeReq(SubscribeReq other) : this() {
      auth_ = other.auth_ != null ? other.auth_.Clone() : null;
      topic_ = other.topic_;
      properties_ = other.properties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeReq Clone() {
      return new SubscribeReq(this);
    }

    /// <summary>Field number for the "auth" field.</summary>
    public const int AuthFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization auth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization Auth {
      get { return auth_; }
      set {
        auth_ = value;
      }
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 2;
    private string topic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Topic {
      get { return topic_; }
      set {
        topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_properties_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 26);
    private readonly pbc::MapField<string, string> properties_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Properties {
      get { return properties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscribeReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscribeReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Auth, other.Auth)) return false;
      if (Topic != other.Topic) return false;
      if (!Properties.Equals(other.Properties)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (auth_ != null) hash ^= Auth.GetHashCode();
      if (Topic.Length != 0) hash ^= Topic.GetHashCode();
      hash ^= Properties.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (auth_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Auth);
      }
      if (Topic.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Topic);
      }
      properties_.WriteTo(output, _map_properties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (auth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auth);
      }
      if (Topic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
      }
      size += properties_.CalculateSize(_map_properties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscribeReq other) {
      if (other == null) {
        return;
      }
      if (other.auth_ != null) {
        if (auth_ == null) {
          Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
        }
        Auth.MergeFrom(other.Auth);
      }
      if (other.Topic.Length != 0) {
        Topic = other.Topic;
      }
      properties_.Add(other.properties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (auth_ == null) {
              Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
            }
            input.ReadMessage(Auth);
            break;
          }
          case 18: {
            Topic = input.ReadString();
            break;
          }
          case 26: {
            properties_.AddEntriesFrom(input, _map_properties_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubscribeResp : pb::IMessage<SubscribeResp> {
    private static readonly pb::MessageParser<SubscribeResp> _parser = new pb::MessageParser<SubscribeResp>(() => new SubscribeResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscribeResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BrothServer.BrothServerReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeResp(SubscribeResp other) : this() {
      exception_ = other.exception_ != null ? other.exception_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeResp Clone() {
      return new SubscribeResp(this);
    }

    /// <summary>Field number for the "exception" field.</summary>
    public const int ExceptionFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.BasilException exception_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.BasilException Exception {
      get { return exception_; }
      set {
        exception_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscribeResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscribeResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Exception, other.Exception)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (exception_ != null) hash ^= Exception.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (exception_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Exception);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (exception_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Exception);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscribeResp other) {
      if (other == null) {
        return;
      }
      if (other.exception_ != null) {
        if (exception_ == null) {
          Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
        }
        Exception.MergeFrom(other.Exception);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (exception_ == null) {
              Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
            }
            input.ReadMessage(Exception);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnsubscribeReq : pb::IMessage<UnsubscribeReq> {
    private static readonly pb::MessageParser<UnsubscribeReq> _parser = new pb::MessageParser<UnsubscribeReq>(() => new UnsubscribeReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnsubscribeReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BrothServer.BrothServerReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeReq(UnsubscribeReq other) : this() {
      auth_ = other.auth_ != null ? other.auth_.Clone() : null;
      topic_ = other.topic_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeReq Clone() {
      return new UnsubscribeReq(this);
    }

    /// <summary>Field number for the "auth" field.</summary>
    public const int AuthFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization auth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization Auth {
      get { return auth_; }
      set {
        auth_ = value;
      }
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 2;
    private string topic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Topic {
      get { return topic_; }
      set {
        topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnsubscribeReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnsubscribeReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Auth, other.Auth)) return false;
      if (Topic != other.Topic) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (auth_ != null) hash ^= Auth.GetHashCode();
      if (Topic.Length != 0) hash ^= Topic.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (auth_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Auth);
      }
      if (Topic.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Topic);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (auth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auth);
      }
      if (Topic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnsubscribeReq other) {
      if (other == null) {
        return;
      }
      if (other.auth_ != null) {
        if (auth_ == null) {
          Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
        }
        Auth.MergeFrom(other.Auth);
      }
      if (other.Topic.Length != 0) {
        Topic = other.Topic;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (auth_ == null) {
              Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
            }
            input.ReadMessage(Auth);
            break;
          }
          case 18: {
            Topic = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnsubscribeResp : pb::IMessage<UnsubscribeResp> {
    private static readonly pb::MessageParser<UnsubscribeResp> _parser = new pb::MessageParser<UnsubscribeResp>(() => new UnsubscribeResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnsubscribeResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BrothServer.BrothServerReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeResp(UnsubscribeResp other) : this() {
      exception_ = other.exception_ != null ? other.exception_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnsubscribeResp Clone() {
      return new UnsubscribeResp(this);
    }

    /// <summary>Field number for the "exception" field.</summary>
    public const int ExceptionFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.BasilException exception_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.BasilException Exception {
      get { return exception_; }
      set {
        exception_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnsubscribeResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnsubscribeResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Exception, other.Exception)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (exception_ != null) hash ^= Exception.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (exception_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Exception);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (exception_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Exception);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnsubscribeResp other) {
      if (other == null) {
        return;
      }
      if (other.exception_ != null) {
        if (exception_ == null) {
          Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
        }
        Exception.MergeFrom(other.Exception);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (exception_ == null) {
              Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
            }
            input.ReadMessage(Exception);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// some remote device subscribed to a topic
  /// </summary>
  public sealed partial class SubscriptionMadeResp : pb::IMessage<SubscriptionMadeResp> {
    private static readonly pb::MessageParser<SubscriptionMadeResp> _parser = new pb::MessageParser<SubscriptionMadeResp>(() => new SubscriptionMadeResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscriptionMadeResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BrothServer.BrothServerReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionMadeResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionMadeResp(SubscriptionMadeResp other) : this() {
      exception_ = other.exception_ != null ? other.exception_.Clone() : null;
      topic_ = other.topic_;
      properties_ = other.properties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionMadeResp Clone() {
      return new SubscriptionMadeResp(this);
    }

    /// <summary>Field number for the "exception" field.</summary>
    public const int ExceptionFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.BasilException exception_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.BasilException Exception {
      get { return exception_; }
      set {
        exception_ = value;
      }
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 2;
    private string topic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Topic {
      get { return topic_; }
      set {
        topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_properties_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 26);
    private readonly pbc::MapField<string, string> properties_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Properties {
      get { return properties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscriptionMadeResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscriptionMadeResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Exception, other.Exception)) return false;
      if (Topic != other.Topic) return false;
      if (!Properties.Equals(other.Properties)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (exception_ != null) hash ^= Exception.GetHashCode();
      if (Topic.Length != 0) hash ^= Topic.GetHashCode();
      hash ^= Properties.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (exception_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Exception);
      }
      if (Topic.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Topic);
      }
      properties_.WriteTo(output, _map_properties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (exception_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Exception);
      }
      if (Topic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
      }
      size += properties_.CalculateSize(_map_properties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscriptionMadeResp other) {
      if (other == null) {
        return;
      }
      if (other.exception_ != null) {
        if (exception_ == null) {
          Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
        }
        Exception.MergeFrom(other.Exception);
      }
      if (other.Topic.Length != 0) {
        Topic = other.Topic;
      }
      properties_.Add(other.properties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (exception_ == null) {
              Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
            }
            input.ReadMessage(Exception);
            break;
          }
          case 18: {
            Topic = input.ReadString();
            break;
          }
          case 26: {
            properties_.AddEntriesFrom(input, _map_properties_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// all remote subscriptions to a topic have been removed
  /// </summary>
  public sealed partial class SubscriptionClearResp : pb::IMessage<SubscriptionClearResp> {
    private static readonly pb::MessageParser<SubscriptionClearResp> _parser = new pb::MessageParser<SubscriptionClearResp>(() => new SubscriptionClearResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscriptionClearResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BrothServer.BrothServerReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionClearResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionClearResp(SubscriptionClearResp other) : this() {
      exception_ = other.exception_ != null ? other.exception_.Clone() : null;
      topic_ = other.topic_;
      properties_ = other.properties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionClearResp Clone() {
      return new SubscriptionClearResp(this);
    }

    /// <summary>Field number for the "exception" field.</summary>
    public const int ExceptionFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.BasilException exception_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.BasilException Exception {
      get { return exception_; }
      set {
        exception_ = value;
      }
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 2;
    private string topic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Topic {
      get { return topic_; }
      set {
        topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_properties_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 26);
    private readonly pbc::MapField<string, string> properties_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Properties {
      get { return properties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscriptionClearResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscriptionClearResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Exception, other.Exception)) return false;
      if (Topic != other.Topic) return false;
      if (!Properties.Equals(other.Properties)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (exception_ != null) hash ^= Exception.GetHashCode();
      if (Topic.Length != 0) hash ^= Topic.GetHashCode();
      hash ^= Properties.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (exception_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Exception);
      }
      if (Topic.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Topic);
      }
      properties_.WriteTo(output, _map_properties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (exception_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Exception);
      }
      if (Topic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
      }
      size += properties_.CalculateSize(_map_properties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscriptionClearResp other) {
      if (other == null) {
        return;
      }
      if (other.exception_ != null) {
        if (exception_ == null) {
          Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
        }
        Exception.MergeFrom(other.Exception);
      }
      if (other.Topic.Length != 0) {
        Topic = other.Topic;
      }
      properties_.Add(other.properties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (exception_ == null) {
              Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
            }
            input.ReadMessage(Exception);
            break;
          }
          case 18: {
            Topic = input.ReadString();
            break;
          }
          case 26: {
            properties_.AddEntriesFrom(input, _map_properties_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// EVENTS ==========================================================
  /// </summary>
  public sealed partial class SendEventReq : pb::IMessage<SendEventReq> {
    private static readonly pb::MessageParser<SendEventReq> _parser = new pb::MessageParser<SendEventReq>(() => new SendEventReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendEventReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BrothServer.BrothServerReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendEventReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendEventReq(SendEventReq other) : this() {
      auth_ = other.auth_ != null ? other.auth_.Clone() : null;
      topic_ = other.topic_;
      features_ = other.features_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendEventReq Clone() {
      return new SendEventReq(this);
    }

    /// <summary>Field number for the "auth" field.</summary>
    public const int AuthFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization auth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization Auth {
      get { return auth_; }
      set {
        auth_ = value;
      }
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 2;
    private string topic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Topic {
      get { return topic_; }
      set {
        topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "features" field.</summary>
    public const int FeaturesFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_features_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 26);
    private readonly pbc::MapField<string, string> features_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Features {
      get { return features_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendEventReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendEventReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Auth, other.Auth)) return false;
      if (Topic != other.Topic) return false;
      if (!Features.Equals(other.Features)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (auth_ != null) hash ^= Auth.GetHashCode();
      if (Topic.Length != 0) hash ^= Topic.GetHashCode();
      hash ^= Features.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (auth_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Auth);
      }
      if (Topic.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Topic);
      }
      features_.WriteTo(output, _map_features_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (auth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auth);
      }
      if (Topic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
      }
      size += features_.CalculateSize(_map_features_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendEventReq other) {
      if (other == null) {
        return;
      }
      if (other.auth_ != null) {
        if (auth_ == null) {
          Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
        }
        Auth.MergeFrom(other.Auth);
      }
      if (other.Topic.Length != 0) {
        Topic = other.Topic;
      }
      features_.Add(other.features_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (auth_ == null) {
              Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
            }
            input.ReadMessage(Auth);
            break;
          }
          case 18: {
            Topic = input.ReadString();
            break;
          }
          case 26: {
            features_.AddEntriesFrom(input, _map_features_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SendEventResp : pb::IMessage<SendEventResp> {
    private static readonly pb::MessageParser<SendEventResp> _parser = new pb::MessageParser<SendEventResp>(() => new SendEventResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendEventResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BrothServer.BrothServerReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendEventResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendEventResp(SendEventResp other) : this() {
      topic_ = other.topic_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendEventResp Clone() {
      return new SendEventResp(this);
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 2;
    private string topic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Topic {
      get { return topic_; }
      set {
        topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendEventResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendEventResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Topic != other.Topic) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Topic.Length != 0) hash ^= Topic.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Topic.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Topic);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Topic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendEventResp other) {
      if (other == null) {
        return;
      }
      if (other.Topic.Length != 0) {
        Topic = other.Topic;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            Topic = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Received event
  /// </summary>
  public sealed partial class EventResp : pb::IMessage<EventResp> {
    private static readonly pb::MessageParser<EventResp> _parser = new pb::MessageParser<EventResp>(() => new EventResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BrothServer.BrothServerReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventResp(EventResp other) : this() {
      exception_ = other.exception_ != null ? other.exception_.Clone() : null;
      topic_ = other.topic_;
      filter_ = other.filter_.Clone();
      properties_ = other.properties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventResp Clone() {
      return new EventResp(this);
    }

    /// <summary>Field number for the "exception" field.</summary>
    public const int ExceptionFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.BasilException exception_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.BasilException Exception {
      get { return exception_; }
      set {
        exception_ = value;
      }
    }

    /// <summary>Field number for the "topic" field.</summary>
    public const int TopicFieldNumber = 2;
    private string topic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Topic {
      get { return topic_; }
      set {
        topic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_filter_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 26);
    private readonly pbc::MapField<string, string> filter_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Filter {
      get { return filter_; }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_properties_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> properties_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Properties {
      get { return properties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Exception, other.Exception)) return false;
      if (Topic != other.Topic) return false;
      if (!Filter.Equals(other.Filter)) return false;
      if (!Properties.Equals(other.Properties)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (exception_ != null) hash ^= Exception.GetHashCode();
      if (Topic.Length != 0) hash ^= Topic.GetHashCode();
      hash ^= Filter.GetHashCode();
      hash ^= Properties.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (exception_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Exception);
      }
      if (Topic.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Topic);
      }
      filter_.WriteTo(output, _map_filter_codec);
      properties_.WriteTo(output, _map_properties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (exception_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Exception);
      }
      if (Topic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Topic);
      }
      size += filter_.CalculateSize(_map_filter_codec);
      size += properties_.CalculateSize(_map_properties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventResp other) {
      if (other == null) {
        return;
      }
      if (other.exception_ != null) {
        if (exception_ == null) {
          Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
        }
        Exception.MergeFrom(other.Exception);
      }
      if (other.Topic.Length != 0) {
        Topic = other.Topic;
      }
      filter_.Add(other.filter_);
      properties_.Add(other.properties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (exception_ == null) {
              Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
            }
            input.ReadMessage(Exception);
            break;
          }
          case 18: {
            Topic = input.ReadString();
            break;
          }
          case 26: {
            filter_.AddEntriesFrom(input, _map_filter_codec);
            break;
          }
          case 34: {
            properties_.AddEntriesFrom(input, _map_properties_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
