// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: BasilServer.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace org.herbal3d.basil.protocol.BasilServer {

  /// <summary>Holder for reflection information generated from BasilServer.proto</summary>
  public static partial class BasilServerReflection {

    #region Descriptor
    /// <summary>File descriptor for BasilServer.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BasilServerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFCYXNpbFNlcnZlci5wcm90bxILQmFzaWxTZXJ2ZXIaEEJhc2lsVHlwZXMu",
            "cHJvdG8i0wEKHElkZW50aWZ5RGlzcGxheWFibGVPYmplY3RSZXESLAoEYXV0",
            "aBgBIAEoCzIeLkJhc2lsVHlwZS5BY2Nlc3NBdXRob3JpemF0aW9uEi4KCWFz",
            "c2V0SW5mbxgCIAEoCzIbLkJhc2lsVHlwZS5Bc3NldEluZm9ybWF0aW9uEi0K",
            "CG9iamVjdElkGAMgASgLMhsuQmFzaWxUeXBlLk9iamVjdElkZW50aWZpZXIS",
            "JgoEYWFiYhgEIAEoCzIYLkJhc2lsVHlwZS5BYUJvdW5kaW5nQm94InwKHUlk",
            "ZW50aWZ5RGlzcGxheWFibGVPYmplY3RSZXNwEiwKCWV4Y2VwdGlvbhgBIAEo",
            "CzIZLkJhc2lsVHlwZS5CYXNpbEV4Y2VwdGlvbhItCghvYmplY3RJZBgCIAEo",
            "CzIbLkJhc2lsVHlwZS5PYmplY3RJZGVudGlmaWVyInkKGkZvcmdldERpc3Bs",
            "YXlhYmxlT2JqZWN0UmVxEiwKBGF1dGgYASABKAsyHi5CYXNpbFR5cGUuQWNj",
            "ZXNzQXV0aG9yaXphdGlvbhItCghvYmplY3RJZBgCIAEoCzIbLkJhc2lsVHlw",
            "ZS5PYmplY3RJZGVudGlmaWVyIksKG0ZvcmdldERpc3BsYXlhYmxlT2JqZWN0",
            "UmVzcBIsCglleGNlcHRpb24YASABKAsyGS5CYXNpbFR5cGUuQmFzaWxFeGNl",
            "cHRpb24i/gIKF0NyZWF0ZU9iamVjdEluc3RhbmNlUmVxEiwKBGF1dGgYASAB",
            "KAsyHi5CYXNpbFR5cGUuQWNjZXNzQXV0aG9yaXphdGlvbhItCghvYmplY3RJ",
            "ZBgCIAEoCzIbLkJhc2lsVHlwZS5PYmplY3RJZGVudGlmaWVyEjEKCmluc3Rh",
            "bmNlSWQYAyABKAsyHS5CYXNpbFR5cGUuSW5zdGFuY2VJZGVudGlmaWVyEiwK",
            "A3BvcxgEIAEoCzIfLkJhc2lsVHlwZS5JbnN0YW5jZVBvc2l0aW9uSW5mbxJS",
            "Cg9wcm9wZXJ0aWVzVG9TZXQYBSADKAsyOS5CYXNpbFNlcnZlci5DcmVhdGVP",
            "YmplY3RJbnN0YW5jZVJlcS5Qcm9wZXJ0aWVzVG9TZXRFbnRyeRIZChFJbnN0",
            "YW5jZUNvdW50SGludBgGIAEoBRo2ChRQcm9wZXJ0aWVzVG9TZXRFbnRyeRIL",
            "CgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBInsKGENyZWF0ZU9iamVj",
            "dEluc3RhbmNlUmVzcBIsCglleGNlcHRpb24YASABKAsyGS5CYXNpbFR5cGUu",
            "QmFzaWxFeGNlcHRpb24SMQoKaW5zdGFuY2VJZBgCIAEoCzIdLkJhc2lsVHlw",
            "ZS5JbnN0YW5jZUlkZW50aWZpZXIiegoXRGVsZXRlT2JqZWN0SW5zdGFuY2VS",
            "ZXESLAoEYXV0aBgBIAEoCzIeLkJhc2lsVHlwZS5BY2Nlc3NBdXRob3JpemF0",
            "aW9uEjEKCmluc3RhbmNlSWQYAiABKAsyHS5CYXNpbFR5cGUuSW5zdGFuY2VJ",
            "ZGVudGlmaWVyIkgKGERlbGV0ZU9iamVjdEluc3RhbmNlUmVzcBIsCglleGNl",
            "cHRpb24YASABKAsyGS5CYXNpbFR5cGUuQmFzaWxFeGNlcHRpb24i5AEKF1Vw",
            "ZGF0ZU9iamVjdFByb3BlcnR5UmVxEiwKBGF1dGgYASABKAsyHi5CYXNpbFR5",
            "cGUuQWNjZXNzQXV0aG9yaXphdGlvbhItCghvYmplY3RJZBgCIAEoCzIbLkJh",
            "c2lsVHlwZS5PYmplY3RJZGVudGlmaWVyEj4KBXByb3BzGAMgAygLMi8uQmFz",
            "aWxTZXJ2ZXIuVXBkYXRlT2JqZWN0UHJvcGVydHlSZXEuUHJvcHNFbnRyeRos",
            "CgpQcm9wc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEi",
            "SAoYVXBkYXRlT2JqZWN0UHJvcGVydHlSZXNwEiwKCWV4Y2VwdGlvbhgBIAEo",
            "CzIZLkJhc2lsVHlwZS5CYXNpbEV4Y2VwdGlvbiLsAQoZVXBkYXRlSW5zdGFu",
            "Y2VQcm9wZXJ0eVJlcRIsCgRhdXRoGAEgASgLMh4uQmFzaWxUeXBlLkFjY2Vz",
            "c0F1dGhvcml6YXRpb24SMQoKaW5zdGFuY2VJZBgCIAEoCzIdLkJhc2lsVHlw",
            "ZS5JbnN0YW5jZUlkZW50aWZpZXISQAoFcHJvcHMYAyADKAsyMS5CYXNpbFNl",
            "cnZlci5VcGRhdGVJbnN0YW5jZVByb3BlcnR5UmVxLlByb3BzRW50cnkaLAoK",
            "UHJvcHNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIkoK",
            "GlVwZGF0ZUluc3RhbmNlUHJvcGVydHlSZXNwEiwKCWV4Y2VwdGlvbhgBIAEo",
            "CzIZLkJhc2lsVHlwZS5CYXNpbEV4Y2VwdGlvbiKqAQoZVXBkYXRlSW5zdGFu",
            "Y2VQb3NpdGlvblJlcRIsCgRhdXRoGAEgASgLMh4uQmFzaWxUeXBlLkFjY2Vz",
            "c0F1dGhvcml6YXRpb24SMQoKaW5zdGFuY2VJZBgCIAEoCzIdLkJhc2lsVHlw",
            "ZS5JbnN0YW5jZUlkZW50aWZpZXISLAoDcG9zGAMgASgLMh8uQmFzaWxUeXBl",
            "Lkluc3RhbmNlUG9zaXRpb25JbmZvIkoKGlVwZGF0ZUluc3RhbmNlUG9zaXRp",
            "b25SZXNwEiwKCWV4Y2VwdGlvbhgBIAEoCzIZLkJhc2lsVHlwZS5CYXNpbEV4",
            "Y2VwdGlvbiKQAQoaUmVxdWVzdE9iamVjdFByb3BlcnRpZXNSZXESLAoEYXV0",
            "aBgBIAEoCzIeLkJhc2lsVHlwZS5BY2Nlc3NBdXRob3JpemF0aW9uEi0KCG9i",
            "amVjdElkGAIgASgLMhsuQmFzaWxUeXBlLk9iamVjdElkZW50aWZpZXISFQoN",
            "cHJvcGVydHlNYXRjaBgDIAEoCSLMAQobUmVxdWVzdE9iamVjdFByb3BlcnRp",
            "ZXNSZXNwEiwKCWV4Y2VwdGlvbhgBIAEoCzIZLkJhc2lsVHlwZS5CYXNpbEV4",
            "Y2VwdGlvbhJMCgpwcm9wZXJ0aWVzGAIgAygLMjguQmFzaWxTZXJ2ZXIuUmVx",
            "dWVzdE9iamVjdFByb3BlcnRpZXNSZXNwLlByb3BlcnRpZXNFbnRyeRoxCg9Q",
            "cm9wZXJ0aWVzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4",
            "ASKWAQocUmVxdWVzdEluc3RhbmNlUHJvcGVydGllc1JlcRIsCgRhdXRoGAEg",
            "ASgLMh4uQmFzaWxUeXBlLkFjY2Vzc0F1dGhvcml6YXRpb24SMQoKaW5zdGFu",
            "Y2VJZBgCIAEoCzIdLkJhc2lsVHlwZS5JbnN0YW5jZUlkZW50aWZpZXISFQoN",
            "cHJvcGVydHlNYXRjaBgDIAEoCSLQAQodUmVxdWVzdEluc3RhbmNlUHJvcGVy",
            "dGllc1Jlc3ASLAoJZXhjZXB0aW9uGAEgASgLMhkuQmFzaWxUeXBlLkJhc2ls",
            "RXhjZXB0aW9uEk4KCnByb3BlcnRpZXMYAiADKAsyOi5CYXNpbFNlcnZlci5S",
            "ZXF1ZXN0SW5zdGFuY2VQcm9wZXJ0aWVzUmVzcC5Qcm9wZXJ0aWVzRW50cnka",
            "MQoPUHJvcGVydGllc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEo",
            "CToCOAEiTwoPQ2xvc2VTZXNzaW9uUmVxEiwKBGF1dGgYASABKAsyHi5CYXNp",
            "bFR5cGUuQWNjZXNzQXV0aG9yaXphdGlvbhIOCgZyZWFzb24YAiABKAkiQAoQ",
            "Q2xvc2VTZXNzaW9uUmVzcBIsCglleGNlcHRpb24YASABKAsyGS5CYXNpbFR5",
            "cGUuQmFzaWxFeGNlcHRpb24iygEKEU1ha2VDb25uZWN0aW9uUmVxEiwKBGF1",
            "dGgYASABKAsyHi5CYXNpbFR5cGUuQWNjZXNzQXV0aG9yaXphdGlvbhJOChBj",
            "b25uZWN0aW9uUGFyYW1zGAIgAygLMjQuQmFzaWxTZXJ2ZXIuTWFrZUNvbm5l",
            "Y3Rpb25SZXEuQ29ubmVjdGlvblBhcmFtc0VudHJ5GjcKFUNvbm5lY3Rpb25Q",
            "YXJhbXNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIkIK",
            "Ek1ha2VDb25uZWN0aW9uUmVzcBIsCglleGNlcHRpb24YASABKAsyGS5CYXNp",
            "bFR5cGUuQmFzaWxFeGNlcHRpb24iYAoNQWxpdmVDaGVja1JlcRIsCgRhdXRo",
            "GAEgASgLMh4uQmFzaWxUeXBlLkFjY2Vzc0F1dGhvcml6YXRpb24SDAoEdGlt",
            "ZRgCIAEoBBITCgtzZXF1ZW5jZU51bRgDIAEoBSJmCg5BbGl2ZUNoZWNrUmVz",
            "cBIMCgR0aW1lGAEgASgEEhMKC3NlcXVlbmNlTnVtGAIgASgFEhQKDHRpbWVS",
            "ZWNlaXZlZBgDIAEoBBIbChNzZXF1ZW5jZU51bVJlY2VpdmVkGAQgASgFMuoH",
            "CgtCYXNpbFNlcnZlchJyChlJZGVudGlmeURpc3BsYXlhYmxlT2JqZWN0Eiku",
            "QmFzaWxTZXJ2ZXIuSWRlbnRpZnlEaXNwbGF5YWJsZU9iamVjdFJlcRoqLkJh",
            "c2lsU2VydmVyLklkZW50aWZ5RGlzcGxheWFibGVPYmplY3RSZXNwEmMKFENy",
            "ZWF0ZU9iamVjdEluc3RhbmNlEiQuQmFzaWxTZXJ2ZXIuQ3JlYXRlT2JqZWN0",
            "SW5zdGFuY2VSZXEaJS5CYXNpbFNlcnZlci5DcmVhdGVPYmplY3RJbnN0YW5j",
            "ZVJlc3ASYwoUVXBkYXRlT2JqZWN0UHJvcGVydHkSJC5CYXNpbFNlcnZlci5V",
            "cGRhdGVPYmplY3RQcm9wZXJ0eVJlcRolLkJhc2lsU2VydmVyLlVwZGF0ZU9i",
            "amVjdFByb3BlcnR5UmVzcBJpChZVcGRhdGVJbnN0YW5jZVByb3BlcnR5EiYu",
            "QmFzaWxTZXJ2ZXIuVXBkYXRlSW5zdGFuY2VQcm9wZXJ0eVJlcRonLkJhc2ls",
            "U2VydmVyLlVwZGF0ZUluc3RhbmNlUHJvcGVydHlSZXNwEmkKFlVwZGF0ZUlu",
            "c3RhbmNlUG9zaXRpb24SJi5CYXNpbFNlcnZlci5VcGRhdGVJbnN0YW5jZVBv",
            "c2l0aW9uUmVxGicuQmFzaWxTZXJ2ZXIuVXBkYXRlSW5zdGFuY2VQb3NpdGlv",
            "blJlc3ASbAoXUmVxdWVzdE9iamVjdFByb3BlcnRpZXMSJy5CYXNpbFNlcnZl",
            "ci5SZXF1ZXN0T2JqZWN0UHJvcGVydGllc1JlcRooLkJhc2lsU2VydmVyLlJl",
            "cXVlc3RPYmplY3RQcm9wZXJ0aWVzUmVzcBJyChlSZXF1ZXN0SW5zdGFuY2VQ",
            "cm9wZXJ0aWVzEikuQmFzaWxTZXJ2ZXIuUmVxdWVzdEluc3RhbmNlUHJvcGVy",
            "dGllc1JlcRoqLkJhc2lsU2VydmVyLlJlcXVlc3RJbnN0YW5jZVByb3BlcnRp",
            "ZXNSZXNwEksKDENsb3NlU2Vzc2lvbhIcLkJhc2lsU2VydmVyLkNsb3NlU2Vz",
            "c2lvblJlcRodLkJhc2lsU2VydmVyLkNsb3NlU2Vzc2lvblJlc3ASUQoOTWFr",
            "ZUNvbm5lY3Rpb24SHi5CYXNpbFNlcnZlci5NYWtlQ29ubmVjdGlvblJlcRof",
            "LkJhc2lsU2VydmVyLk1ha2VDb25uZWN0aW9uUmVzcBJFCgpBbGl2ZUNoZWNr",
            "EhouQmFzaWxTZXJ2ZXIuQWxpdmVDaGVja1JlcRobLkJhc2lsU2VydmVyLkFs",
            "aXZlQ2hlY2tSZXNwQiqqAidvcmcuaGVyYmFsM2QuYmFzaWwucHJvdG9jb2wu",
            "QmFzaWxTZXJ2ZXJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::org.herbal3d.basil.protocol.BasilType.BasilTypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BasilServer.IdentifyDisplayableObjectReq), global::org.herbal3d.basil.protocol.BasilServer.IdentifyDisplayableObjectReq.Parser, new[]{ "Auth", "AssetInfo", "ObjectId", "Aabb" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BasilServer.IdentifyDisplayableObjectResp), global::org.herbal3d.basil.protocol.BasilServer.IdentifyDisplayableObjectResp.Parser, new[]{ "Exception", "ObjectId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BasilServer.ForgetDisplayableObjectReq), global::org.herbal3d.basil.protocol.BasilServer.ForgetDisplayableObjectReq.Parser, new[]{ "Auth", "ObjectId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BasilServer.ForgetDisplayableObjectResp), global::org.herbal3d.basil.protocol.BasilServer.ForgetDisplayableObjectResp.Parser, new[]{ "Exception" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BasilServer.CreateObjectInstanceReq), global::org.herbal3d.basil.protocol.BasilServer.CreateObjectInstanceReq.Parser, new[]{ "Auth", "ObjectId", "InstanceId", "Pos", "PropertiesToSet", "InstanceCountHint" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BasilServer.CreateObjectInstanceResp), global::org.herbal3d.basil.protocol.BasilServer.CreateObjectInstanceResp.Parser, new[]{ "Exception", "InstanceId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BasilServer.DeleteObjectInstanceReq), global::org.herbal3d.basil.protocol.BasilServer.DeleteObjectInstanceReq.Parser, new[]{ "Auth", "InstanceId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BasilServer.DeleteObjectInstanceResp), global::org.herbal3d.basil.protocol.BasilServer.DeleteObjectInstanceResp.Parser, new[]{ "Exception" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BasilServer.UpdateObjectPropertyReq), global::org.herbal3d.basil.protocol.BasilServer.UpdateObjectPropertyReq.Parser, new[]{ "Auth", "ObjectId", "Props" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BasilServer.UpdateObjectPropertyResp), global::org.herbal3d.basil.protocol.BasilServer.UpdateObjectPropertyResp.Parser, new[]{ "Exception" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BasilServer.UpdateInstancePropertyReq), global::org.herbal3d.basil.protocol.BasilServer.UpdateInstancePropertyReq.Parser, new[]{ "Auth", "InstanceId", "Props" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BasilServer.UpdateInstancePropertyResp), global::org.herbal3d.basil.protocol.BasilServer.UpdateInstancePropertyResp.Parser, new[]{ "Exception" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BasilServer.UpdateInstancePositionReq), global::org.herbal3d.basil.protocol.BasilServer.UpdateInstancePositionReq.Parser, new[]{ "Auth", "InstanceId", "Pos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BasilServer.UpdateInstancePositionResp), global::org.herbal3d.basil.protocol.BasilServer.UpdateInstancePositionResp.Parser, new[]{ "Exception" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BasilServer.RequestObjectPropertiesReq), global::org.herbal3d.basil.protocol.BasilServer.RequestObjectPropertiesReq.Parser, new[]{ "Auth", "ObjectId", "PropertyMatch" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BasilServer.RequestObjectPropertiesResp), global::org.herbal3d.basil.protocol.BasilServer.RequestObjectPropertiesResp.Parser, new[]{ "Exception", "Properties" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BasilServer.RequestInstancePropertiesReq), global::org.herbal3d.basil.protocol.BasilServer.RequestInstancePropertiesReq.Parser, new[]{ "Auth", "InstanceId", "PropertyMatch" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BasilServer.RequestInstancePropertiesResp), global::org.herbal3d.basil.protocol.BasilServer.RequestInstancePropertiesResp.Parser, new[]{ "Exception", "Properties" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BasilServer.CloseSessionReq), global::org.herbal3d.basil.protocol.BasilServer.CloseSessionReq.Parser, new[]{ "Auth", "Reason" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BasilServer.CloseSessionResp), global::org.herbal3d.basil.protocol.BasilServer.CloseSessionResp.Parser, new[]{ "Exception" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BasilServer.MakeConnectionReq), global::org.herbal3d.basil.protocol.BasilServer.MakeConnectionReq.Parser, new[]{ "Auth", "ConnectionParams" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BasilServer.MakeConnectionResp), global::org.herbal3d.basil.protocol.BasilServer.MakeConnectionResp.Parser, new[]{ "Exception" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BasilServer.AliveCheckReq), global::org.herbal3d.basil.protocol.BasilServer.AliveCheckReq.Parser, new[]{ "Auth", "Time", "SequenceNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::org.herbal3d.basil.protocol.BasilServer.AliveCheckResp), global::org.herbal3d.basil.protocol.BasilServer.AliveCheckResp.Parser, new[]{ "Time", "SequenceNum", "TimeReceived", "SequenceNumReceived" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Describe an object to Basil for later display or manipulation
  /// This associates an ID with a block of asset information that can be
  ///   later displayed or operated on.
  /// </summary>
  public sealed partial class IdentifyDisplayableObjectReq : pb::IMessage<IdentifyDisplayableObjectReq> {
    private static readonly pb::MessageParser<IdentifyDisplayableObjectReq> _parser = new pb::MessageParser<IdentifyDisplayableObjectReq>(() => new IdentifyDisplayableObjectReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IdentifyDisplayableObjectReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BasilServer.BasilServerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdentifyDisplayableObjectReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdentifyDisplayableObjectReq(IdentifyDisplayableObjectReq other) : this() {
      auth_ = other.auth_ != null ? other.auth_.Clone() : null;
      assetInfo_ = other.assetInfo_ != null ? other.assetInfo_.Clone() : null;
      objectId_ = other.objectId_ != null ? other.objectId_.Clone() : null;
      aabb_ = other.aabb_ != null ? other.aabb_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdentifyDisplayableObjectReq Clone() {
      return new IdentifyDisplayableObjectReq(this);
    }

    /// <summary>Field number for the "auth" field.</summary>
    public const int AuthFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization auth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization Auth {
      get { return auth_; }
      set {
        auth_ = value;
      }
    }

    /// <summary>Field number for the "assetInfo" field.</summary>
    public const int AssetInfoFieldNumber = 2;
    private global::org.herbal3d.basil.protocol.BasilType.AssetInformation assetInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.AssetInformation AssetInfo {
      get { return assetInfo_; }
      set {
        assetInfo_ = value;
      }
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 3;
    private global::org.herbal3d.basil.protocol.BasilType.ObjectIdentifier objectId_;
    /// <summary>
    /// if supplied, used if unique
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.ObjectIdentifier ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "aabb" field.</summary>
    public const int AabbFieldNumber = 4;
    private global::org.herbal3d.basil.protocol.BasilType.AaBoundingBox aabb_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.AaBoundingBox Aabb {
      get { return aabb_; }
      set {
        aabb_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IdentifyDisplayableObjectReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IdentifyDisplayableObjectReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Auth, other.Auth)) return false;
      if (!object.Equals(AssetInfo, other.AssetInfo)) return false;
      if (!object.Equals(ObjectId, other.ObjectId)) return false;
      if (!object.Equals(Aabb, other.Aabb)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (auth_ != null) hash ^= Auth.GetHashCode();
      if (assetInfo_ != null) hash ^= AssetInfo.GetHashCode();
      if (objectId_ != null) hash ^= ObjectId.GetHashCode();
      if (aabb_ != null) hash ^= Aabb.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (auth_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Auth);
      }
      if (assetInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AssetInfo);
      }
      if (objectId_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ObjectId);
      }
      if (aabb_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Aabb);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (auth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auth);
      }
      if (assetInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AssetInfo);
      }
      if (objectId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ObjectId);
      }
      if (aabb_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Aabb);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IdentifyDisplayableObjectReq other) {
      if (other == null) {
        return;
      }
      if (other.auth_ != null) {
        if (auth_ == null) {
          Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
        }
        Auth.MergeFrom(other.Auth);
      }
      if (other.assetInfo_ != null) {
        if (assetInfo_ == null) {
          AssetInfo = new global::org.herbal3d.basil.protocol.BasilType.AssetInformation();
        }
        AssetInfo.MergeFrom(other.AssetInfo);
      }
      if (other.objectId_ != null) {
        if (objectId_ == null) {
          ObjectId = new global::org.herbal3d.basil.protocol.BasilType.ObjectIdentifier();
        }
        ObjectId.MergeFrom(other.ObjectId);
      }
      if (other.aabb_ != null) {
        if (aabb_ == null) {
          Aabb = new global::org.herbal3d.basil.protocol.BasilType.AaBoundingBox();
        }
        Aabb.MergeFrom(other.Aabb);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (auth_ == null) {
              Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
            }
            input.ReadMessage(Auth);
            break;
          }
          case 18: {
            if (assetInfo_ == null) {
              AssetInfo = new global::org.herbal3d.basil.protocol.BasilType.AssetInformation();
            }
            input.ReadMessage(AssetInfo);
            break;
          }
          case 26: {
            if (objectId_ == null) {
              ObjectId = new global::org.herbal3d.basil.protocol.BasilType.ObjectIdentifier();
            }
            input.ReadMessage(ObjectId);
            break;
          }
          case 34: {
            if (aabb_ == null) {
              Aabb = new global::org.herbal3d.basil.protocol.BasilType.AaBoundingBox();
            }
            input.ReadMessage(Aabb);
            break;
          }
        }
      }
    }

  }

  public sealed partial class IdentifyDisplayableObjectResp : pb::IMessage<IdentifyDisplayableObjectResp> {
    private static readonly pb::MessageParser<IdentifyDisplayableObjectResp> _parser = new pb::MessageParser<IdentifyDisplayableObjectResp>(() => new IdentifyDisplayableObjectResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IdentifyDisplayableObjectResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BasilServer.BasilServerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdentifyDisplayableObjectResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdentifyDisplayableObjectResp(IdentifyDisplayableObjectResp other) : this() {
      exception_ = other.exception_ != null ? other.exception_.Clone() : null;
      objectId_ = other.objectId_ != null ? other.objectId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdentifyDisplayableObjectResp Clone() {
      return new IdentifyDisplayableObjectResp(this);
    }

    /// <summary>Field number for the "exception" field.</summary>
    public const int ExceptionFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.BasilException exception_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.BasilException Exception {
      get { return exception_; }
      set {
        exception_ = value;
      }
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 2;
    private global::org.herbal3d.basil.protocol.BasilType.ObjectIdentifier objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.ObjectIdentifier ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IdentifyDisplayableObjectResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IdentifyDisplayableObjectResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Exception, other.Exception)) return false;
      if (!object.Equals(ObjectId, other.ObjectId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (exception_ != null) hash ^= Exception.GetHashCode();
      if (objectId_ != null) hash ^= ObjectId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (exception_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Exception);
      }
      if (objectId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ObjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (exception_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Exception);
      }
      if (objectId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ObjectId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IdentifyDisplayableObjectResp other) {
      if (other == null) {
        return;
      }
      if (other.exception_ != null) {
        if (exception_ == null) {
          Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
        }
        Exception.MergeFrom(other.Exception);
      }
      if (other.objectId_ != null) {
        if (objectId_ == null) {
          ObjectId = new global::org.herbal3d.basil.protocol.BasilType.ObjectIdentifier();
        }
        ObjectId.MergeFrom(other.ObjectId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (exception_ == null) {
              Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
            }
            input.ReadMessage(Exception);
            break;
          }
          case 18: {
            if (objectId_ == null) {
              ObjectId = new global::org.herbal3d.basil.protocol.BasilType.ObjectIdentifier();
            }
            input.ReadMessage(ObjectId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ForgetDisplayableObjectReq : pb::IMessage<ForgetDisplayableObjectReq> {
    private static readonly pb::MessageParser<ForgetDisplayableObjectReq> _parser = new pb::MessageParser<ForgetDisplayableObjectReq>(() => new ForgetDisplayableObjectReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ForgetDisplayableObjectReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BasilServer.BasilServerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ForgetDisplayableObjectReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ForgetDisplayableObjectReq(ForgetDisplayableObjectReq other) : this() {
      auth_ = other.auth_ != null ? other.auth_.Clone() : null;
      objectId_ = other.objectId_ != null ? other.objectId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ForgetDisplayableObjectReq Clone() {
      return new ForgetDisplayableObjectReq(this);
    }

    /// <summary>Field number for the "auth" field.</summary>
    public const int AuthFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization auth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization Auth {
      get { return auth_; }
      set {
        auth_ = value;
      }
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 2;
    private global::org.herbal3d.basil.protocol.BasilType.ObjectIdentifier objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.ObjectIdentifier ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ForgetDisplayableObjectReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ForgetDisplayableObjectReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Auth, other.Auth)) return false;
      if (!object.Equals(ObjectId, other.ObjectId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (auth_ != null) hash ^= Auth.GetHashCode();
      if (objectId_ != null) hash ^= ObjectId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (auth_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Auth);
      }
      if (objectId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ObjectId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (auth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auth);
      }
      if (objectId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ObjectId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ForgetDisplayableObjectReq other) {
      if (other == null) {
        return;
      }
      if (other.auth_ != null) {
        if (auth_ == null) {
          Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
        }
        Auth.MergeFrom(other.Auth);
      }
      if (other.objectId_ != null) {
        if (objectId_ == null) {
          ObjectId = new global::org.herbal3d.basil.protocol.BasilType.ObjectIdentifier();
        }
        ObjectId.MergeFrom(other.ObjectId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (auth_ == null) {
              Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
            }
            input.ReadMessage(Auth);
            break;
          }
          case 18: {
            if (objectId_ == null) {
              ObjectId = new global::org.herbal3d.basil.protocol.BasilType.ObjectIdentifier();
            }
            input.ReadMessage(ObjectId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ForgetDisplayableObjectResp : pb::IMessage<ForgetDisplayableObjectResp> {
    private static readonly pb::MessageParser<ForgetDisplayableObjectResp> _parser = new pb::MessageParser<ForgetDisplayableObjectResp>(() => new ForgetDisplayableObjectResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ForgetDisplayableObjectResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BasilServer.BasilServerReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ForgetDisplayableObjectResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ForgetDisplayableObjectResp(ForgetDisplayableObjectResp other) : this() {
      exception_ = other.exception_ != null ? other.exception_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ForgetDisplayableObjectResp Clone() {
      return new ForgetDisplayableObjectResp(this);
    }

    /// <summary>Field number for the "exception" field.</summary>
    public const int ExceptionFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.BasilException exception_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.BasilException Exception {
      get { return exception_; }
      set {
        exception_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ForgetDisplayableObjectResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ForgetDisplayableObjectResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Exception, other.Exception)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (exception_ != null) hash ^= Exception.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (exception_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Exception);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (exception_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Exception);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ForgetDisplayableObjectResp other) {
      if (other == null) {
        return;
      }
      if (other.exception_ != null) {
        if (exception_ == null) {
          Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
        }
        Exception.MergeFrom(other.Exception);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (exception_ == null) {
              Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
            }
            input.ReadMessage(Exception);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// An object may occur multiple times. This defines one instance
  ///   that is at a particular location in the world.
  /// Returns an instanceIdentifer that can be used to refer to the instance.
  /// </summary>
  public sealed partial class CreateObjectInstanceReq : pb::IMessage<CreateObjectInstanceReq> {
    private static readonly pb::MessageParser<CreateObjectInstanceReq> _parser = new pb::MessageParser<CreateObjectInstanceReq>(() => new CreateObjectInstanceReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateObjectInstanceReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BasilServer.BasilServerReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateObjectInstanceReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateObjectInstanceReq(CreateObjectInstanceReq other) : this() {
      auth_ = other.auth_ != null ? other.auth_.Clone() : null;
      objectId_ = other.objectId_ != null ? other.objectId_.Clone() : null;
      instanceId_ = other.instanceId_ != null ? other.instanceId_.Clone() : null;
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      propertiesToSet_ = other.propertiesToSet_.Clone();
      instanceCountHint_ = other.instanceCountHint_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateObjectInstanceReq Clone() {
      return new CreateObjectInstanceReq(this);
    }

    /// <summary>Field number for the "auth" field.</summary>
    public const int AuthFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization auth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization Auth {
      get { return auth_; }
      set {
        auth_ = value;
      }
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 2;
    private global::org.herbal3d.basil.protocol.BasilType.ObjectIdentifier objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.ObjectIdentifier ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "instanceId" field.</summary>
    public const int InstanceIdFieldNumber = 3;
    private global::org.herbal3d.basil.protocol.BasilType.InstanceIdentifier instanceId_;
    /// <summary>
    /// if supplied, used if unique
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.InstanceIdentifier InstanceId {
      get { return instanceId_; }
      set {
        instanceId_ = value;
      }
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 4;
    private global::org.herbal3d.basil.protocol.BasilType.InstancePositionInfo pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.InstancePositionInfo Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "propertiesToSet" field.</summary>
    public const int PropertiesToSetFieldNumber = 5;
    private static readonly pbc::MapField<string, string>.Codec _map_propertiesToSet_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 42);
    private readonly pbc::MapField<string, string> propertiesToSet_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> PropertiesToSet {
      get { return propertiesToSet_; }
    }

    /// <summary>Field number for the "InstanceCountHint" field.</summary>
    public const int InstanceCountHintFieldNumber = 6;
    private int instanceCountHint_;
    /// <summary>
    /// hint as to total number of instances (zero means no hint)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InstanceCountHint {
      get { return instanceCountHint_; }
      set {
        instanceCountHint_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateObjectInstanceReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateObjectInstanceReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Auth, other.Auth)) return false;
      if (!object.Equals(ObjectId, other.ObjectId)) return false;
      if (!object.Equals(InstanceId, other.InstanceId)) return false;
      if (!object.Equals(Pos, other.Pos)) return false;
      if (!PropertiesToSet.Equals(other.PropertiesToSet)) return false;
      if (InstanceCountHint != other.InstanceCountHint) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (auth_ != null) hash ^= Auth.GetHashCode();
      if (objectId_ != null) hash ^= ObjectId.GetHashCode();
      if (instanceId_ != null) hash ^= InstanceId.GetHashCode();
      if (pos_ != null) hash ^= Pos.GetHashCode();
      hash ^= PropertiesToSet.GetHashCode();
      if (InstanceCountHint != 0) hash ^= InstanceCountHint.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (auth_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Auth);
      }
      if (objectId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ObjectId);
      }
      if (instanceId_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(InstanceId);
      }
      if (pos_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Pos);
      }
      propertiesToSet_.WriteTo(output, _map_propertiesToSet_codec);
      if (InstanceCountHint != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(InstanceCountHint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (auth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auth);
      }
      if (objectId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ObjectId);
      }
      if (instanceId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InstanceId);
      }
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      size += propertiesToSet_.CalculateSize(_map_propertiesToSet_codec);
      if (InstanceCountHint != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InstanceCountHint);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateObjectInstanceReq other) {
      if (other == null) {
        return;
      }
      if (other.auth_ != null) {
        if (auth_ == null) {
          Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
        }
        Auth.MergeFrom(other.Auth);
      }
      if (other.objectId_ != null) {
        if (objectId_ == null) {
          ObjectId = new global::org.herbal3d.basil.protocol.BasilType.ObjectIdentifier();
        }
        ObjectId.MergeFrom(other.ObjectId);
      }
      if (other.instanceId_ != null) {
        if (instanceId_ == null) {
          InstanceId = new global::org.herbal3d.basil.protocol.BasilType.InstanceIdentifier();
        }
        InstanceId.MergeFrom(other.InstanceId);
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          Pos = new global::org.herbal3d.basil.protocol.BasilType.InstancePositionInfo();
        }
        Pos.MergeFrom(other.Pos);
      }
      propertiesToSet_.Add(other.propertiesToSet_);
      if (other.InstanceCountHint != 0) {
        InstanceCountHint = other.InstanceCountHint;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (auth_ == null) {
              Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
            }
            input.ReadMessage(Auth);
            break;
          }
          case 18: {
            if (objectId_ == null) {
              ObjectId = new global::org.herbal3d.basil.protocol.BasilType.ObjectIdentifier();
            }
            input.ReadMessage(ObjectId);
            break;
          }
          case 26: {
            if (instanceId_ == null) {
              InstanceId = new global::org.herbal3d.basil.protocol.BasilType.InstanceIdentifier();
            }
            input.ReadMessage(InstanceId);
            break;
          }
          case 34: {
            if (pos_ == null) {
              Pos = new global::org.herbal3d.basil.protocol.BasilType.InstancePositionInfo();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 42: {
            propertiesToSet_.AddEntriesFrom(input, _map_propertiesToSet_codec);
            break;
          }
          case 48: {
            InstanceCountHint = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateObjectInstanceResp : pb::IMessage<CreateObjectInstanceResp> {
    private static readonly pb::MessageParser<CreateObjectInstanceResp> _parser = new pb::MessageParser<CreateObjectInstanceResp>(() => new CreateObjectInstanceResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateObjectInstanceResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BasilServer.BasilServerReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateObjectInstanceResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateObjectInstanceResp(CreateObjectInstanceResp other) : this() {
      exception_ = other.exception_ != null ? other.exception_.Clone() : null;
      instanceId_ = other.instanceId_ != null ? other.instanceId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateObjectInstanceResp Clone() {
      return new CreateObjectInstanceResp(this);
    }

    /// <summary>Field number for the "exception" field.</summary>
    public const int ExceptionFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.BasilException exception_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.BasilException Exception {
      get { return exception_; }
      set {
        exception_ = value;
      }
    }

    /// <summary>Field number for the "instanceId" field.</summary>
    public const int InstanceIdFieldNumber = 2;
    private global::org.herbal3d.basil.protocol.BasilType.InstanceIdentifier instanceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.InstanceIdentifier InstanceId {
      get { return instanceId_; }
      set {
        instanceId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateObjectInstanceResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateObjectInstanceResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Exception, other.Exception)) return false;
      if (!object.Equals(InstanceId, other.InstanceId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (exception_ != null) hash ^= Exception.GetHashCode();
      if (instanceId_ != null) hash ^= InstanceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (exception_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Exception);
      }
      if (instanceId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InstanceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (exception_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Exception);
      }
      if (instanceId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InstanceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateObjectInstanceResp other) {
      if (other == null) {
        return;
      }
      if (other.exception_ != null) {
        if (exception_ == null) {
          Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
        }
        Exception.MergeFrom(other.Exception);
      }
      if (other.instanceId_ != null) {
        if (instanceId_ == null) {
          InstanceId = new global::org.herbal3d.basil.protocol.BasilType.InstanceIdentifier();
        }
        InstanceId.MergeFrom(other.InstanceId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (exception_ == null) {
              Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
            }
            input.ReadMessage(Exception);
            break;
          }
          case 18: {
            if (instanceId_ == null) {
              InstanceId = new global::org.herbal3d.basil.protocol.BasilType.InstanceIdentifier();
            }
            input.ReadMessage(InstanceId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteObjectInstanceReq : pb::IMessage<DeleteObjectInstanceReq> {
    private static readonly pb::MessageParser<DeleteObjectInstanceReq> _parser = new pb::MessageParser<DeleteObjectInstanceReq>(() => new DeleteObjectInstanceReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteObjectInstanceReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BasilServer.BasilServerReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteObjectInstanceReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteObjectInstanceReq(DeleteObjectInstanceReq other) : this() {
      auth_ = other.auth_ != null ? other.auth_.Clone() : null;
      instanceId_ = other.instanceId_ != null ? other.instanceId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteObjectInstanceReq Clone() {
      return new DeleteObjectInstanceReq(this);
    }

    /// <summary>Field number for the "auth" field.</summary>
    public const int AuthFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization auth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization Auth {
      get { return auth_; }
      set {
        auth_ = value;
      }
    }

    /// <summary>Field number for the "instanceId" field.</summary>
    public const int InstanceIdFieldNumber = 2;
    private global::org.herbal3d.basil.protocol.BasilType.InstanceIdentifier instanceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.InstanceIdentifier InstanceId {
      get { return instanceId_; }
      set {
        instanceId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteObjectInstanceReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteObjectInstanceReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Auth, other.Auth)) return false;
      if (!object.Equals(InstanceId, other.InstanceId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (auth_ != null) hash ^= Auth.GetHashCode();
      if (instanceId_ != null) hash ^= InstanceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (auth_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Auth);
      }
      if (instanceId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InstanceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (auth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auth);
      }
      if (instanceId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InstanceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteObjectInstanceReq other) {
      if (other == null) {
        return;
      }
      if (other.auth_ != null) {
        if (auth_ == null) {
          Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
        }
        Auth.MergeFrom(other.Auth);
      }
      if (other.instanceId_ != null) {
        if (instanceId_ == null) {
          InstanceId = new global::org.herbal3d.basil.protocol.BasilType.InstanceIdentifier();
        }
        InstanceId.MergeFrom(other.InstanceId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (auth_ == null) {
              Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
            }
            input.ReadMessage(Auth);
            break;
          }
          case 18: {
            if (instanceId_ == null) {
              InstanceId = new global::org.herbal3d.basil.protocol.BasilType.InstanceIdentifier();
            }
            input.ReadMessage(InstanceId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteObjectInstanceResp : pb::IMessage<DeleteObjectInstanceResp> {
    private static readonly pb::MessageParser<DeleteObjectInstanceResp> _parser = new pb::MessageParser<DeleteObjectInstanceResp>(() => new DeleteObjectInstanceResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteObjectInstanceResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BasilServer.BasilServerReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteObjectInstanceResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteObjectInstanceResp(DeleteObjectInstanceResp other) : this() {
      exception_ = other.exception_ != null ? other.exception_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteObjectInstanceResp Clone() {
      return new DeleteObjectInstanceResp(this);
    }

    /// <summary>Field number for the "exception" field.</summary>
    public const int ExceptionFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.BasilException exception_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.BasilException Exception {
      get { return exception_; }
      set {
        exception_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteObjectInstanceResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteObjectInstanceResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Exception, other.Exception)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (exception_ != null) hash ^= Exception.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (exception_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Exception);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (exception_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Exception);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteObjectInstanceResp other) {
      if (other == null) {
        return;
      }
      if (other.exception_ != null) {
        if (exception_ == null) {
          Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
        }
        Exception.MergeFrom(other.Exception);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (exception_ == null) {
              Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
            }
            input.ReadMessage(Exception);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Update a property of an object. This could effect all instances.
  /// </summary>
  public sealed partial class UpdateObjectPropertyReq : pb::IMessage<UpdateObjectPropertyReq> {
    private static readonly pb::MessageParser<UpdateObjectPropertyReq> _parser = new pb::MessageParser<UpdateObjectPropertyReq>(() => new UpdateObjectPropertyReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateObjectPropertyReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BasilServer.BasilServerReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateObjectPropertyReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateObjectPropertyReq(UpdateObjectPropertyReq other) : this() {
      auth_ = other.auth_ != null ? other.auth_.Clone() : null;
      objectId_ = other.objectId_ != null ? other.objectId_.Clone() : null;
      props_ = other.props_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateObjectPropertyReq Clone() {
      return new UpdateObjectPropertyReq(this);
    }

    /// <summary>Field number for the "auth" field.</summary>
    public const int AuthFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization auth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization Auth {
      get { return auth_; }
      set {
        auth_ = value;
      }
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 2;
    private global::org.herbal3d.basil.protocol.BasilType.ObjectIdentifier objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.ObjectIdentifier ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "props" field.</summary>
    public const int PropsFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_props_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 26);
    private readonly pbc::MapField<string, string> props_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Props {
      get { return props_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateObjectPropertyReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateObjectPropertyReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Auth, other.Auth)) return false;
      if (!object.Equals(ObjectId, other.ObjectId)) return false;
      if (!Props.Equals(other.Props)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (auth_ != null) hash ^= Auth.GetHashCode();
      if (objectId_ != null) hash ^= ObjectId.GetHashCode();
      hash ^= Props.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (auth_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Auth);
      }
      if (objectId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ObjectId);
      }
      props_.WriteTo(output, _map_props_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (auth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auth);
      }
      if (objectId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ObjectId);
      }
      size += props_.CalculateSize(_map_props_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateObjectPropertyReq other) {
      if (other == null) {
        return;
      }
      if (other.auth_ != null) {
        if (auth_ == null) {
          Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
        }
        Auth.MergeFrom(other.Auth);
      }
      if (other.objectId_ != null) {
        if (objectId_ == null) {
          ObjectId = new global::org.herbal3d.basil.protocol.BasilType.ObjectIdentifier();
        }
        ObjectId.MergeFrom(other.ObjectId);
      }
      props_.Add(other.props_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (auth_ == null) {
              Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
            }
            input.ReadMessage(Auth);
            break;
          }
          case 18: {
            if (objectId_ == null) {
              ObjectId = new global::org.herbal3d.basil.protocol.BasilType.ObjectIdentifier();
            }
            input.ReadMessage(ObjectId);
            break;
          }
          case 26: {
            props_.AddEntriesFrom(input, _map_props_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateObjectPropertyResp : pb::IMessage<UpdateObjectPropertyResp> {
    private static readonly pb::MessageParser<UpdateObjectPropertyResp> _parser = new pb::MessageParser<UpdateObjectPropertyResp>(() => new UpdateObjectPropertyResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateObjectPropertyResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BasilServer.BasilServerReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateObjectPropertyResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateObjectPropertyResp(UpdateObjectPropertyResp other) : this() {
      exception_ = other.exception_ != null ? other.exception_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateObjectPropertyResp Clone() {
      return new UpdateObjectPropertyResp(this);
    }

    /// <summary>Field number for the "exception" field.</summary>
    public const int ExceptionFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.BasilException exception_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.BasilException Exception {
      get { return exception_; }
      set {
        exception_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateObjectPropertyResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateObjectPropertyResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Exception, other.Exception)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (exception_ != null) hash ^= Exception.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (exception_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Exception);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (exception_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Exception);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateObjectPropertyResp other) {
      if (other == null) {
        return;
      }
      if (other.exception_ != null) {
        if (exception_ == null) {
          Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
        }
        Exception.MergeFrom(other.Exception);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (exception_ == null) {
              Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
            }
            input.ReadMessage(Exception);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Update a property of an instance
  /// </summary>
  public sealed partial class UpdateInstancePropertyReq : pb::IMessage<UpdateInstancePropertyReq> {
    private static readonly pb::MessageParser<UpdateInstancePropertyReq> _parser = new pb::MessageParser<UpdateInstancePropertyReq>(() => new UpdateInstancePropertyReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateInstancePropertyReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BasilServer.BasilServerReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInstancePropertyReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInstancePropertyReq(UpdateInstancePropertyReq other) : this() {
      auth_ = other.auth_ != null ? other.auth_.Clone() : null;
      instanceId_ = other.instanceId_ != null ? other.instanceId_.Clone() : null;
      props_ = other.props_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInstancePropertyReq Clone() {
      return new UpdateInstancePropertyReq(this);
    }

    /// <summary>Field number for the "auth" field.</summary>
    public const int AuthFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization auth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization Auth {
      get { return auth_; }
      set {
        auth_ = value;
      }
    }

    /// <summary>Field number for the "instanceId" field.</summary>
    public const int InstanceIdFieldNumber = 2;
    private global::org.herbal3d.basil.protocol.BasilType.InstanceIdentifier instanceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.InstanceIdentifier InstanceId {
      get { return instanceId_; }
      set {
        instanceId_ = value;
      }
    }

    /// <summary>Field number for the "props" field.</summary>
    public const int PropsFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_props_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 26);
    private readonly pbc::MapField<string, string> props_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Props {
      get { return props_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateInstancePropertyReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateInstancePropertyReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Auth, other.Auth)) return false;
      if (!object.Equals(InstanceId, other.InstanceId)) return false;
      if (!Props.Equals(other.Props)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (auth_ != null) hash ^= Auth.GetHashCode();
      if (instanceId_ != null) hash ^= InstanceId.GetHashCode();
      hash ^= Props.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (auth_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Auth);
      }
      if (instanceId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InstanceId);
      }
      props_.WriteTo(output, _map_props_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (auth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auth);
      }
      if (instanceId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InstanceId);
      }
      size += props_.CalculateSize(_map_props_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateInstancePropertyReq other) {
      if (other == null) {
        return;
      }
      if (other.auth_ != null) {
        if (auth_ == null) {
          Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
        }
        Auth.MergeFrom(other.Auth);
      }
      if (other.instanceId_ != null) {
        if (instanceId_ == null) {
          InstanceId = new global::org.herbal3d.basil.protocol.BasilType.InstanceIdentifier();
        }
        InstanceId.MergeFrom(other.InstanceId);
      }
      props_.Add(other.props_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (auth_ == null) {
              Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
            }
            input.ReadMessage(Auth);
            break;
          }
          case 18: {
            if (instanceId_ == null) {
              InstanceId = new global::org.herbal3d.basil.protocol.BasilType.InstanceIdentifier();
            }
            input.ReadMessage(InstanceId);
            break;
          }
          case 26: {
            props_.AddEntriesFrom(input, _map_props_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateInstancePropertyResp : pb::IMessage<UpdateInstancePropertyResp> {
    private static readonly pb::MessageParser<UpdateInstancePropertyResp> _parser = new pb::MessageParser<UpdateInstancePropertyResp>(() => new UpdateInstancePropertyResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateInstancePropertyResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BasilServer.BasilServerReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInstancePropertyResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInstancePropertyResp(UpdateInstancePropertyResp other) : this() {
      exception_ = other.exception_ != null ? other.exception_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInstancePropertyResp Clone() {
      return new UpdateInstancePropertyResp(this);
    }

    /// <summary>Field number for the "exception" field.</summary>
    public const int ExceptionFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.BasilException exception_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.BasilException Exception {
      get { return exception_; }
      set {
        exception_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateInstancePropertyResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateInstancePropertyResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Exception, other.Exception)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (exception_ != null) hash ^= Exception.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (exception_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Exception);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (exception_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Exception);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateInstancePropertyResp other) {
      if (other == null) {
        return;
      }
      if (other.exception_ != null) {
        if (exception_ == null) {
          Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
        }
        Exception.MergeFrom(other.Exception);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (exception_ == null) {
              Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
            }
            input.ReadMessage(Exception);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A short form that updates the position properties of an instance
  /// </summary>
  public sealed partial class UpdateInstancePositionReq : pb::IMessage<UpdateInstancePositionReq> {
    private static readonly pb::MessageParser<UpdateInstancePositionReq> _parser = new pb::MessageParser<UpdateInstancePositionReq>(() => new UpdateInstancePositionReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateInstancePositionReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BasilServer.BasilServerReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInstancePositionReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInstancePositionReq(UpdateInstancePositionReq other) : this() {
      auth_ = other.auth_ != null ? other.auth_.Clone() : null;
      instanceId_ = other.instanceId_ != null ? other.instanceId_.Clone() : null;
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInstancePositionReq Clone() {
      return new UpdateInstancePositionReq(this);
    }

    /// <summary>Field number for the "auth" field.</summary>
    public const int AuthFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization auth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization Auth {
      get { return auth_; }
      set {
        auth_ = value;
      }
    }

    /// <summary>Field number for the "instanceId" field.</summary>
    public const int InstanceIdFieldNumber = 2;
    private global::org.herbal3d.basil.protocol.BasilType.InstanceIdentifier instanceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.InstanceIdentifier InstanceId {
      get { return instanceId_; }
      set {
        instanceId_ = value;
      }
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 3;
    private global::org.herbal3d.basil.protocol.BasilType.InstancePositionInfo pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.InstancePositionInfo Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateInstancePositionReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateInstancePositionReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Auth, other.Auth)) return false;
      if (!object.Equals(InstanceId, other.InstanceId)) return false;
      if (!object.Equals(Pos, other.Pos)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (auth_ != null) hash ^= Auth.GetHashCode();
      if (instanceId_ != null) hash ^= InstanceId.GetHashCode();
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (auth_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Auth);
      }
      if (instanceId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InstanceId);
      }
      if (pos_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (auth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auth);
      }
      if (instanceId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InstanceId);
      }
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateInstancePositionReq other) {
      if (other == null) {
        return;
      }
      if (other.auth_ != null) {
        if (auth_ == null) {
          Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
        }
        Auth.MergeFrom(other.Auth);
      }
      if (other.instanceId_ != null) {
        if (instanceId_ == null) {
          InstanceId = new global::org.herbal3d.basil.protocol.BasilType.InstanceIdentifier();
        }
        InstanceId.MergeFrom(other.InstanceId);
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          Pos = new global::org.herbal3d.basil.protocol.BasilType.InstancePositionInfo();
        }
        Pos.MergeFrom(other.Pos);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (auth_ == null) {
              Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
            }
            input.ReadMessage(Auth);
            break;
          }
          case 18: {
            if (instanceId_ == null) {
              InstanceId = new global::org.herbal3d.basil.protocol.BasilType.InstanceIdentifier();
            }
            input.ReadMessage(InstanceId);
            break;
          }
          case 26: {
            if (pos_ == null) {
              Pos = new global::org.herbal3d.basil.protocol.BasilType.InstancePositionInfo();
            }
            input.ReadMessage(Pos);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateInstancePositionResp : pb::IMessage<UpdateInstancePositionResp> {
    private static readonly pb::MessageParser<UpdateInstancePositionResp> _parser = new pb::MessageParser<UpdateInstancePositionResp>(() => new UpdateInstancePositionResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateInstancePositionResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BasilServer.BasilServerReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInstancePositionResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInstancePositionResp(UpdateInstancePositionResp other) : this() {
      exception_ = other.exception_ != null ? other.exception_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInstancePositionResp Clone() {
      return new UpdateInstancePositionResp(this);
    }

    /// <summary>Field number for the "exception" field.</summary>
    public const int ExceptionFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.BasilException exception_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.BasilException Exception {
      get { return exception_; }
      set {
        exception_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateInstancePositionResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateInstancePositionResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Exception, other.Exception)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (exception_ != null) hash ^= Exception.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (exception_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Exception);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (exception_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Exception);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateInstancePositionResp other) {
      if (other == null) {
        return;
      }
      if (other.exception_ != null) {
        if (exception_ == null) {
          Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
        }
        Exception.MergeFrom(other.Exception);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (exception_ == null) {
              Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
            }
            input.ReadMessage(Exception);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Get the properties of an object
  /// </summary>
  public sealed partial class RequestObjectPropertiesReq : pb::IMessage<RequestObjectPropertiesReq> {
    private static readonly pb::MessageParser<RequestObjectPropertiesReq> _parser = new pb::MessageParser<RequestObjectPropertiesReq>(() => new RequestObjectPropertiesReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestObjectPropertiesReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BasilServer.BasilServerReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestObjectPropertiesReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestObjectPropertiesReq(RequestObjectPropertiesReq other) : this() {
      auth_ = other.auth_ != null ? other.auth_.Clone() : null;
      objectId_ = other.objectId_ != null ? other.objectId_.Clone() : null;
      propertyMatch_ = other.propertyMatch_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestObjectPropertiesReq Clone() {
      return new RequestObjectPropertiesReq(this);
    }

    /// <summary>Field number for the "auth" field.</summary>
    public const int AuthFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization auth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization Auth {
      get { return auth_; }
      set {
        auth_ = value;
      }
    }

    /// <summary>Field number for the "objectId" field.</summary>
    public const int ObjectIdFieldNumber = 2;
    private global::org.herbal3d.basil.protocol.BasilType.ObjectIdentifier objectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.ObjectIdentifier ObjectId {
      get { return objectId_; }
      set {
        objectId_ = value;
      }
    }

    /// <summary>Field number for the "propertyMatch" field.</summary>
    public const int PropertyMatchFieldNumber = 3;
    private string propertyMatch_ = "";
    /// <summary>
    /// wildcard used to match returned properties
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PropertyMatch {
      get { return propertyMatch_; }
      set {
        propertyMatch_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestObjectPropertiesReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestObjectPropertiesReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Auth, other.Auth)) return false;
      if (!object.Equals(ObjectId, other.ObjectId)) return false;
      if (PropertyMatch != other.PropertyMatch) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (auth_ != null) hash ^= Auth.GetHashCode();
      if (objectId_ != null) hash ^= ObjectId.GetHashCode();
      if (PropertyMatch.Length != 0) hash ^= PropertyMatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (auth_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Auth);
      }
      if (objectId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ObjectId);
      }
      if (PropertyMatch.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PropertyMatch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (auth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auth);
      }
      if (objectId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ObjectId);
      }
      if (PropertyMatch.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PropertyMatch);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestObjectPropertiesReq other) {
      if (other == null) {
        return;
      }
      if (other.auth_ != null) {
        if (auth_ == null) {
          Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
        }
        Auth.MergeFrom(other.Auth);
      }
      if (other.objectId_ != null) {
        if (objectId_ == null) {
          ObjectId = new global::org.herbal3d.basil.protocol.BasilType.ObjectIdentifier();
        }
        ObjectId.MergeFrom(other.ObjectId);
      }
      if (other.PropertyMatch.Length != 0) {
        PropertyMatch = other.PropertyMatch;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (auth_ == null) {
              Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
            }
            input.ReadMessage(Auth);
            break;
          }
          case 18: {
            if (objectId_ == null) {
              ObjectId = new global::org.herbal3d.basil.protocol.BasilType.ObjectIdentifier();
            }
            input.ReadMessage(ObjectId);
            break;
          }
          case 26: {
            PropertyMatch = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RequestObjectPropertiesResp : pb::IMessage<RequestObjectPropertiesResp> {
    private static readonly pb::MessageParser<RequestObjectPropertiesResp> _parser = new pb::MessageParser<RequestObjectPropertiesResp>(() => new RequestObjectPropertiesResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestObjectPropertiesResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BasilServer.BasilServerReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestObjectPropertiesResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestObjectPropertiesResp(RequestObjectPropertiesResp other) : this() {
      exception_ = other.exception_ != null ? other.exception_.Clone() : null;
      properties_ = other.properties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestObjectPropertiesResp Clone() {
      return new RequestObjectPropertiesResp(this);
    }

    /// <summary>Field number for the "exception" field.</summary>
    public const int ExceptionFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.BasilException exception_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.BasilException Exception {
      get { return exception_; }
      set {
        exception_ = value;
      }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_properties_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 18);
    private readonly pbc::MapField<string, string> properties_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Properties {
      get { return properties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestObjectPropertiesResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestObjectPropertiesResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Exception, other.Exception)) return false;
      if (!Properties.Equals(other.Properties)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (exception_ != null) hash ^= Exception.GetHashCode();
      hash ^= Properties.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (exception_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Exception);
      }
      properties_.WriteTo(output, _map_properties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (exception_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Exception);
      }
      size += properties_.CalculateSize(_map_properties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestObjectPropertiesResp other) {
      if (other == null) {
        return;
      }
      if (other.exception_ != null) {
        if (exception_ == null) {
          Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
        }
        Exception.MergeFrom(other.Exception);
      }
      properties_.Add(other.properties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (exception_ == null) {
              Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
            }
            input.ReadMessage(Exception);
            break;
          }
          case 18: {
            properties_.AddEntriesFrom(input, _map_properties_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Get the properties of an instance
  /// </summary>
  public sealed partial class RequestInstancePropertiesReq : pb::IMessage<RequestInstancePropertiesReq> {
    private static readonly pb::MessageParser<RequestInstancePropertiesReq> _parser = new pb::MessageParser<RequestInstancePropertiesReq>(() => new RequestInstancePropertiesReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestInstancePropertiesReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BasilServer.BasilServerReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestInstancePropertiesReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestInstancePropertiesReq(RequestInstancePropertiesReq other) : this() {
      auth_ = other.auth_ != null ? other.auth_.Clone() : null;
      instanceId_ = other.instanceId_ != null ? other.instanceId_.Clone() : null;
      propertyMatch_ = other.propertyMatch_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestInstancePropertiesReq Clone() {
      return new RequestInstancePropertiesReq(this);
    }

    /// <summary>Field number for the "auth" field.</summary>
    public const int AuthFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization auth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization Auth {
      get { return auth_; }
      set {
        auth_ = value;
      }
    }

    /// <summary>Field number for the "instanceId" field.</summary>
    public const int InstanceIdFieldNumber = 2;
    private global::org.herbal3d.basil.protocol.BasilType.InstanceIdentifier instanceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.InstanceIdentifier InstanceId {
      get { return instanceId_; }
      set {
        instanceId_ = value;
      }
    }

    /// <summary>Field number for the "propertyMatch" field.</summary>
    public const int PropertyMatchFieldNumber = 3;
    private string propertyMatch_ = "";
    /// <summary>
    /// wildcard used to match returned properties
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PropertyMatch {
      get { return propertyMatch_; }
      set {
        propertyMatch_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestInstancePropertiesReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestInstancePropertiesReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Auth, other.Auth)) return false;
      if (!object.Equals(InstanceId, other.InstanceId)) return false;
      if (PropertyMatch != other.PropertyMatch) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (auth_ != null) hash ^= Auth.GetHashCode();
      if (instanceId_ != null) hash ^= InstanceId.GetHashCode();
      if (PropertyMatch.Length != 0) hash ^= PropertyMatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (auth_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Auth);
      }
      if (instanceId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InstanceId);
      }
      if (PropertyMatch.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PropertyMatch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (auth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auth);
      }
      if (instanceId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InstanceId);
      }
      if (PropertyMatch.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PropertyMatch);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestInstancePropertiesReq other) {
      if (other == null) {
        return;
      }
      if (other.auth_ != null) {
        if (auth_ == null) {
          Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
        }
        Auth.MergeFrom(other.Auth);
      }
      if (other.instanceId_ != null) {
        if (instanceId_ == null) {
          InstanceId = new global::org.herbal3d.basil.protocol.BasilType.InstanceIdentifier();
        }
        InstanceId.MergeFrom(other.InstanceId);
      }
      if (other.PropertyMatch.Length != 0) {
        PropertyMatch = other.PropertyMatch;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (auth_ == null) {
              Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
            }
            input.ReadMessage(Auth);
            break;
          }
          case 18: {
            if (instanceId_ == null) {
              InstanceId = new global::org.herbal3d.basil.protocol.BasilType.InstanceIdentifier();
            }
            input.ReadMessage(InstanceId);
            break;
          }
          case 26: {
            PropertyMatch = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RequestInstancePropertiesResp : pb::IMessage<RequestInstancePropertiesResp> {
    private static readonly pb::MessageParser<RequestInstancePropertiesResp> _parser = new pb::MessageParser<RequestInstancePropertiesResp>(() => new RequestInstancePropertiesResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestInstancePropertiesResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BasilServer.BasilServerReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestInstancePropertiesResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestInstancePropertiesResp(RequestInstancePropertiesResp other) : this() {
      exception_ = other.exception_ != null ? other.exception_.Clone() : null;
      properties_ = other.properties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestInstancePropertiesResp Clone() {
      return new RequestInstancePropertiesResp(this);
    }

    /// <summary>Field number for the "exception" field.</summary>
    public const int ExceptionFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.BasilException exception_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.BasilException Exception {
      get { return exception_; }
      set {
        exception_ = value;
      }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_properties_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 18);
    private readonly pbc::MapField<string, string> properties_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Properties {
      get { return properties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestInstancePropertiesResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestInstancePropertiesResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Exception, other.Exception)) return false;
      if (!Properties.Equals(other.Properties)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (exception_ != null) hash ^= Exception.GetHashCode();
      hash ^= Properties.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (exception_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Exception);
      }
      properties_.WriteTo(output, _map_properties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (exception_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Exception);
      }
      size += properties_.CalculateSize(_map_properties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestInstancePropertiesResp other) {
      if (other == null) {
        return;
      }
      if (other.exception_ != null) {
        if (exception_ == null) {
          Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
        }
        Exception.MergeFrom(other.Exception);
      }
      properties_.Add(other.properties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (exception_ == null) {
              Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
            }
            input.ReadMessage(Exception);
            break;
          }
          case 18: {
            properties_.AddEntriesFrom(input, _map_properties_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CloseSessionReq : pb::IMessage<CloseSessionReq> {
    private static readonly pb::MessageParser<CloseSessionReq> _parser = new pb::MessageParser<CloseSessionReq>(() => new CloseSessionReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CloseSessionReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BasilServer.BasilServerReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseSessionReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseSessionReq(CloseSessionReq other) : this() {
      auth_ = other.auth_ != null ? other.auth_.Clone() : null;
      reason_ = other.reason_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseSessionReq Clone() {
      return new CloseSessionReq(this);
    }

    /// <summary>Field number for the "auth" field.</summary>
    public const int AuthFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization auth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization Auth {
      get { return auth_; }
      set {
        auth_ = value;
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 2;
    private string reason_ = "";
    /// <summary>
    /// if there is a reason for leaving
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CloseSessionReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CloseSessionReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Auth, other.Auth)) return false;
      if (Reason != other.Reason) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (auth_ != null) hash ^= Auth.GetHashCode();
      if (Reason.Length != 0) hash ^= Reason.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (auth_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Auth);
      }
      if (Reason.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Reason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (auth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auth);
      }
      if (Reason.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CloseSessionReq other) {
      if (other == null) {
        return;
      }
      if (other.auth_ != null) {
        if (auth_ == null) {
          Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
        }
        Auth.MergeFrom(other.Auth);
      }
      if (other.Reason.Length != 0) {
        Reason = other.Reason;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (auth_ == null) {
              Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
            }
            input.ReadMessage(Auth);
            break;
          }
          case 18: {
            Reason = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CloseSessionResp : pb::IMessage<CloseSessionResp> {
    private static readonly pb::MessageParser<CloseSessionResp> _parser = new pb::MessageParser<CloseSessionResp>(() => new CloseSessionResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CloseSessionResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BasilServer.BasilServerReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseSessionResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseSessionResp(CloseSessionResp other) : this() {
      exception_ = other.exception_ != null ? other.exception_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseSessionResp Clone() {
      return new CloseSessionResp(this);
    }

    /// <summary>Field number for the "exception" field.</summary>
    public const int ExceptionFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.BasilException exception_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.BasilException Exception {
      get { return exception_; }
      set {
        exception_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CloseSessionResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CloseSessionResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Exception, other.Exception)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (exception_ != null) hash ^= Exception.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (exception_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Exception);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (exception_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Exception);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CloseSessionResp other) {
      if (other == null) {
        return;
      }
      if (other.exception_ != null) {
        if (exception_ == null) {
          Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
        }
        Exception.MergeFrom(other.Exception);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (exception_ == null) {
              Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
            }
            input.ReadMessage(Exception);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Command to Basil to talk to some data source. Originated by Pesto.
  /// </summary>
  public sealed partial class MakeConnectionReq : pb::IMessage<MakeConnectionReq> {
    private static readonly pb::MessageParser<MakeConnectionReq> _parser = new pb::MessageParser<MakeConnectionReq>(() => new MakeConnectionReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MakeConnectionReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BasilServer.BasilServerReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MakeConnectionReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MakeConnectionReq(MakeConnectionReq other) : this() {
      auth_ = other.auth_ != null ? other.auth_.Clone() : null;
      connectionParams_ = other.connectionParams_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MakeConnectionReq Clone() {
      return new MakeConnectionReq(this);
    }

    /// <summary>Field number for the "auth" field.</summary>
    public const int AuthFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization auth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization Auth {
      get { return auth_; }
      set {
        auth_ = value;
      }
    }

    /// <summary>Field number for the "connectionParams" field.</summary>
    public const int ConnectionParamsFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_connectionParams_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 18);
    private readonly pbc::MapField<string, string> connectionParams_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> ConnectionParams {
      get { return connectionParams_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MakeConnectionReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MakeConnectionReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Auth, other.Auth)) return false;
      if (!ConnectionParams.Equals(other.ConnectionParams)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (auth_ != null) hash ^= Auth.GetHashCode();
      hash ^= ConnectionParams.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (auth_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Auth);
      }
      connectionParams_.WriteTo(output, _map_connectionParams_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (auth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auth);
      }
      size += connectionParams_.CalculateSize(_map_connectionParams_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MakeConnectionReq other) {
      if (other == null) {
        return;
      }
      if (other.auth_ != null) {
        if (auth_ == null) {
          Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
        }
        Auth.MergeFrom(other.Auth);
      }
      connectionParams_.Add(other.connectionParams_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (auth_ == null) {
              Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
            }
            input.ReadMessage(Auth);
            break;
          }
          case 18: {
            connectionParams_.AddEntriesFrom(input, _map_connectionParams_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MakeConnectionResp : pb::IMessage<MakeConnectionResp> {
    private static readonly pb::MessageParser<MakeConnectionResp> _parser = new pb::MessageParser<MakeConnectionResp>(() => new MakeConnectionResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MakeConnectionResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BasilServer.BasilServerReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MakeConnectionResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MakeConnectionResp(MakeConnectionResp other) : this() {
      exception_ = other.exception_ != null ? other.exception_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MakeConnectionResp Clone() {
      return new MakeConnectionResp(this);
    }

    /// <summary>Field number for the "exception" field.</summary>
    public const int ExceptionFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.BasilException exception_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.BasilException Exception {
      get { return exception_; }
      set {
        exception_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MakeConnectionResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MakeConnectionResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Exception, other.Exception)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (exception_ != null) hash ^= Exception.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (exception_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Exception);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (exception_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Exception);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MakeConnectionResp other) {
      if (other == null) {
        return;
      }
      if (other.exception_ != null) {
        if (exception_ == null) {
          Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
        }
        Exception.MergeFrom(other.Exception);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (exception_ == null) {
              Exception = new global::org.herbal3d.basil.protocol.BasilType.BasilException();
            }
            input.ReadMessage(Exception);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Ping the other side to measure delay and functionality
  /// </summary>
  public sealed partial class AliveCheckReq : pb::IMessage<AliveCheckReq> {
    private static readonly pb::MessageParser<AliveCheckReq> _parser = new pb::MessageParser<AliveCheckReq>(() => new AliveCheckReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AliveCheckReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BasilServer.BasilServerReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AliveCheckReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AliveCheckReq(AliveCheckReq other) : this() {
      auth_ = other.auth_ != null ? other.auth_.Clone() : null;
      time_ = other.time_;
      sequenceNum_ = other.sequenceNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AliveCheckReq Clone() {
      return new AliveCheckReq(this);
    }

    /// <summary>Field number for the "auth" field.</summary>
    public const int AuthFieldNumber = 1;
    private global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization auth_;
    /// <summary>
    /// not just anyone can see I'm alive
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization Auth {
      get { return auth_; }
      set {
        auth_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 2;
    private ulong time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "sequenceNum" field.</summary>
    public const int SequenceNumFieldNumber = 3;
    private int sequenceNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SequenceNum {
      get { return sequenceNum_; }
      set {
        sequenceNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AliveCheckReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AliveCheckReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Auth, other.Auth)) return false;
      if (Time != other.Time) return false;
      if (SequenceNum != other.SequenceNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (auth_ != null) hash ^= Auth.GetHashCode();
      if (Time != 0UL) hash ^= Time.GetHashCode();
      if (SequenceNum != 0) hash ^= SequenceNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (auth_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Auth);
      }
      if (Time != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Time);
      }
      if (SequenceNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SequenceNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (auth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auth);
      }
      if (Time != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Time);
      }
      if (SequenceNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SequenceNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AliveCheckReq other) {
      if (other == null) {
        return;
      }
      if (other.auth_ != null) {
        if (auth_ == null) {
          Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
        }
        Auth.MergeFrom(other.Auth);
      }
      if (other.Time != 0UL) {
        Time = other.Time;
      }
      if (other.SequenceNum != 0) {
        SequenceNum = other.SequenceNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (auth_ == null) {
              Auth = new global::org.herbal3d.basil.protocol.BasilType.AccessAuthorization();
            }
            input.ReadMessage(Auth);
            break;
          }
          case 16: {
            Time = input.ReadUInt64();
            break;
          }
          case 24: {
            SequenceNum = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AliveCheckResp : pb::IMessage<AliveCheckResp> {
    private static readonly pb::MessageParser<AliveCheckResp> _parser = new pb::MessageParser<AliveCheckResp>(() => new AliveCheckResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AliveCheckResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::org.herbal3d.basil.protocol.BasilServer.BasilServerReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AliveCheckResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AliveCheckResp(AliveCheckResp other) : this() {
      time_ = other.time_;
      sequenceNum_ = other.sequenceNum_;
      timeReceived_ = other.timeReceived_;
      sequenceNumReceived_ = other.sequenceNumReceived_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AliveCheckResp Clone() {
      return new AliveCheckResp(this);
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 1;
    private ulong time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "sequenceNum" field.</summary>
    public const int SequenceNumFieldNumber = 2;
    private int sequenceNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SequenceNum {
      get { return sequenceNum_; }
      set {
        sequenceNum_ = value;
      }
    }

    /// <summary>Field number for the "timeReceived" field.</summary>
    public const int TimeReceivedFieldNumber = 3;
    private ulong timeReceived_;
    /// <summary>
    /// When the AliveCheck was received
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TimeReceived {
      get { return timeReceived_; }
      set {
        timeReceived_ = value;
      }
    }

    /// <summary>Field number for the "sequenceNumReceived" field.</summary>
    public const int SequenceNumReceivedFieldNumber = 4;
    private int sequenceNumReceived_;
    /// <summary>
    /// The sequence number sent in the AliveCheck
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SequenceNumReceived {
      get { return sequenceNumReceived_; }
      set {
        sequenceNumReceived_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AliveCheckResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AliveCheckResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Time != other.Time) return false;
      if (SequenceNum != other.SequenceNum) return false;
      if (TimeReceived != other.TimeReceived) return false;
      if (SequenceNumReceived != other.SequenceNumReceived) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Time != 0UL) hash ^= Time.GetHashCode();
      if (SequenceNum != 0) hash ^= SequenceNum.GetHashCode();
      if (TimeReceived != 0UL) hash ^= TimeReceived.GetHashCode();
      if (SequenceNumReceived != 0) hash ^= SequenceNumReceived.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Time != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Time);
      }
      if (SequenceNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SequenceNum);
      }
      if (TimeReceived != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(TimeReceived);
      }
      if (SequenceNumReceived != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(SequenceNumReceived);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Time != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Time);
      }
      if (SequenceNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SequenceNum);
      }
      if (TimeReceived != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TimeReceived);
      }
      if (SequenceNumReceived != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SequenceNumReceived);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AliveCheckResp other) {
      if (other == null) {
        return;
      }
      if (other.Time != 0UL) {
        Time = other.Time;
      }
      if (other.SequenceNum != 0) {
        SequenceNum = other.SequenceNum;
      }
      if (other.TimeReceived != 0UL) {
        TimeReceived = other.TimeReceived;
      }
      if (other.SequenceNumReceived != 0) {
        SequenceNumReceived = other.SequenceNumReceived;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Time = input.ReadUInt64();
            break;
          }
          case 16: {
            SequenceNum = input.ReadInt32();
            break;
          }
          case 24: {
            TimeReceived = input.ReadUInt64();
            break;
          }
          case 32: {
            SequenceNumReceived = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
